{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/edition.html","webpack:///./src/templates/editionDialog.html","webpack:///./src/impl/ol/js/editionLayer.js","webpack:///./src/impl/ol/js/editionGeometryBase.js","webpack:///./src/impl/ol/js/editionSelectGeometry.js","webpack:///./src/facade/js/editionSelectGeometry.js","webpack:///./src/impl/ol/js/editioncontrol.js","webpack:///./src/impl/ol/js/editionHighlightGeometry.js","webpack:///./src/facade/js/editionHighlightGeometry.js","webpack:///./src/impl/ol/js/editionInsertGeometry.js","webpack:///./src/facade/js/editionInsertGeometry.js","webpack:///./src/impl/ol/js/editionModifyGeometry.js","webpack:///./src/facade/js/editionModifyGeometry.js","webpack:///./src/impl/ol/js/editionInsertTemporalGeometry.js","webpack:///./src/facade/js/editionInsertTemporalGeometry.js","webpack:///./src/impl/ol/js/editionSnapping.js","webpack:///./src/facade/js/editionSnapping.js","webpack:///./src/impl/ol/js/editionGeometryControl.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/editionDialog.js","webpack:///./src/facade/js/editionSpatialEngine.js","webpack:///./src/facade/js/editionGeometryControl.js","webpack:///./src/facade/js/editioncontrol.js","webpack:///./src/facade/js/edition.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","editionLayer","M","impl","Layer","base","base_","map_","facadeMap_","ol3Layer_","isVisible_","isModified_","sandBoxFeatures_","sandBoxLayer_","selectedFeatures_","deletedFeatures_","geometry","undefined","type_","addTo","this","layer","Vector","setZIndex","Map","Z_INDEX","type","WFS","addLayers","getImpl","getOL3Layer","setStyle","selectableStyle","getSandBoxStyle","style","Polygon","fill","color","opacity","stroke","width","setVisible","this_","highlightControl","highlightInteraction_","getFeatures","getArray","indexOf","highlightStyle","tipoGeometria","Point","radius","Mfeature","getOLFeature","idFeature","features","getSource","length","getId","ol","Collection","push","addFeatures","feature","getGeometry","getCoordinates","foundFeature","getFeatureById","gmlText","proj","Projection","code","axis","addEquivalentProjections","getProjection","format","GML3","readFeatures","olFeature","jsonFeature","GeoJSON","writeFeatureObject","newFeature","Feature","featureId","removeFeatures","MFeature","forEach","Array","apply","featuresArray","index","array","featureAlreadyAdded","Number","id","coordinates","unselectFeature","getSelectedStyle","splice","allFeatures","selectFeature","extent","createEmpty","f","extend","getExtent","featuresIdArray","attribute","foundFeatures","getOLFeatureByUniqueAttribute","Mfeatures","olFeatures","getMapImpl","getView","fit","duration","utils","getFeaturesExtent","setBbox","e","dialog","info","getOLFeaturesExtensionByAttribute","maxZoom","attr","MFeatures","getAttribute","clonedFeatures","clear","refresh","olMap","isNullOrEmpty","removeLayer","removeLayers","popup_","Style","Fill","Stroke","image","Circle","EditionGeometryBase","Control","map","layer_","modifiedFeatures","interactions_","element","callback","entityLayer","createInteraction","addInteraction","getControls","activated","deactivate","setActive","removeInteraction","removeControl","EditionSelectGeometry","selectInteraction_","interaction","Select","layers","multi","condition","events","click","on","EditionGeometryBaseImpl","isUndefined","EditionSelectGeometryImpl","exception","activate","obj","control","editionControl","html","getInteractions","DoubleClickZoom","dblClickInteraction_","evt","customEvt","CustomEvent","detail","coordinate","bubbles","getContainer","dispatchEvent","removeEventListener","EditionHighlightGeometry","pointerMove","EditionHighlightGeometryImpl","EditionInsertGeometry","drawInteraction_","layerType","getType","geometryType","getSimpleType","Draw","EditionInsertGeometryImpl","EditionModifyGeometry","modifyInteraction_","featuresCollection","getSelectedFeatureCollection","Modify","deleteCondition","event","shiftKeyOnly","singleClick","EditionModifyGeometryImpl","EditionTemporalGeometry","EditionTemporalGeometryImpl","EditionSnapping","snapInteraction_","Snap","source","getImplLayer","EditionSnappingImpl","EditionGeometryControl","geojson","requestParams","point","geom","srsName_","writeGetFeature","srsName","featurePrefix","featureTypes","outputFormat","maxFeatures","filter","intersects","geomField","bbox_","boundingExtent","MultiPoint","featureTmp","json","j","polygon","Math","floor","random","translations","en","es","getLang","res","language","getTranslation","lang","getValue","keyPath","translation","console","warn","split","reduce","prev","current","show","message","title","severity","acceptFn","cancelFn","template","compileSync","jsonp","vars","accept_btn","cancel_btn","addEvents","close","document","querySelector","removeChild","mapeaContainer","acceptButton","cancelButton","addEventListener","selectLayer","appendChild","getGeoJSONGeometry","jstsGeometry","jsts","io","GeoJSONWriter","write","unionFeature","feature1","feature2","getGeoJSON","setGeometry","unionGeometry","geom1","geom2","jstsGeom1","getJSTSGeometry","jstsGeom2","union","geometryIntersects","jsts_geom_intersects","targetFeatures","intersection","jsts_geom1","jsts_geom2","resultGeom","difference","jsts_geom_difference","GeoJSONReader","read","dividePolygon","splitFeature","selectedFeature","polygon2Divide","_geometries","line4Divide","getExteriorRing","polygonizer","operation","polygonize","Polygonizer","add","polygons","getPolygons","polygons2Create","newHole","size","geojsonRepresentation","polygon2Divide2Line","turf","polygonToLine","poligonos","lineToPolygon","dividePolygonWithHoles","exteriorRingTargetPoly","polygonizerTarget","getArea","getNumInteriorRing","isSimple","result","getPolygonsOnHoles","dividePolygonWithHolesJSTS","getNewHolePolygon","createDividedPolygons","polygonizerHole","iterator","hasNext","next","_holes","polygonizerHoles","poly1","poly2","holes","hole","polygonGeoJson","resultFeatures","cont","newPolygons","targetPolygonNoHoles","olNewTargetFeatureJSTS","newHoleFeatureJSTS","olNewTargetFeatureJSTSgj","newHoleFeatureJSTSgj","geomSelected","booleanContains","booleanOverlap","targetPolygonNoHolesJSTS","newHoleJSTS","EditionGeometryControlImpl","impl_","NAME","element_","entityLayer_","insertGeomControl","insertTemporalGeomControl","modifyGeomControl","translateGeomControl","selectGeomControl","snappingControl","entityAddWFSControl","insertPolygonButton","selectPolygonButton","selectPolygonByAreaButton","selectPolygonByLineButton","selectAllSandboxPolygonButton","modifyPolygonButton","dividePolygonButton","joinPolygonsButton","intersectPolygonButton","emptyPolygonButton","zoomToSelectedButton","addGeomButton","WFSManagerCtl","self_","snappingButton","activateSnapping","zoomMenuElement","zoomMenuPolygonButton","zoomMenuPolygonButtonClass","classList","manageSelectedClassInDropdown","showDropdownContent","hideDropdownContent","zoomDropdownMenu","zoomToSandBoxButton","zoomToSandBox","zoomToSelection","selectMenuElement","selectMenuPolygonButton","selectMenuPolygonButtonClass","selectDropdownMenu","removeFromSandBoxButton","removeSelectedFeaturesFromSandBox","selectPolygonByClick","selectPolygonByDraw","selectAllSandboxPolygon","deselectAllSandboxPolygonButton","deselectAllSandboxPolygon","insertPolygon","modifyPolygon","getElementsByTagName","confirmDialogJoinPolygons","addGeom","intersectPolygon","emptyPolygon","currentTarget","children","left","borderTopRightRadius","borderBottomRightRadius","marginBottom","selectedClass","nextElementSibling","deactiveControls","offsetParent","previousElementSibling","removeSelectedFeatures","unselectControls","removeFeaturesFromSandBox","className","replace","restoreDefaultClassDropdownButtons","onPolygonInserted","addNewFeatureToSandBox","onPolygonSelected","featureInSandBox","selected","getImplFeature","target","onPolygonSelectedByDraw","sandBoxFeatures","inter","getGeoJsonFromFeature","selectAllFeatures","unselectAllFeatures","featuresSelected","styles","getModifyStyle","onPolygonModified","getRevision","onPolygonDivided","body","cursor","resultPolygons","topologicalError","k","joinPolygons","targetPolygon","pairTargetPolygons","polygonsToDelete","polygonsToVerify","clone","jstsGeomFeature1","jstsGeomFeature2","equals","setId","addNewMFeatureToSandBox","onPolygonIntersected","getMFeatureById","args","doSpatialProcess","onGeometryEmptied","fnProcess","plantillaRecorte","createOLPolygonFeature","capasVectoriales","getLayers","addGeomFromVectorialLayer","layerName","layerVectorial","removeAllFeatures","setType","clon","wfsCatalog","getPanels","controls_","zoomToFeatures","preventDefault","mapContainer","getElementsByClassName","EditionSpinner","getServiceActive","featureRequest","getFeatureRequestBody","options","useProxy","XMLSerializer","serializeToString","proxy","remote","post","url","then","response","xml","documentElement","description","text","error","readGML3Features","un","getWfsFeatures","destroy","EditionImplControl","Promise","success","fail","import_btn","select_btn","select_click","select_line","select_area","select_all","deselect_all","zoom","zoom_sandbox","zoom_selection","geometry_draw","snapping","modify_polygon","geometry_divide","empty_polygon","delete_selected","createControls","geomControl","deactivateClick","Edition","Plugin","position","metadata_","api","metadata","control_","EditionControl","panel_","ui","Panel","addControls","addPanels","destroyControls","removeControls","plugin","window","M$plugin$Edition"],"mappings":"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","file":"edition.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div class=\\\"m-entitygeometry-container\\\">\\r\\n    <div id=\\\"m-button-entitypolygon-vertical\\\" class=\\\"m-control button\\\">\\r\\n        <!--<button id=\\\"m-addtosandbox-button\\\" class=\\\"g-cartografia-capas\\\" title=\\\"Añadir geometrías a la capa de trabajo\\\"></button> -->\\r\\n        <button id=\\\"m-addgeometry-button\\\" class=\\\"icon-edition-import-button\\\" title=\\\"{{translations.import_btn}}\\\"></button>\\r\\n        <div id=\\\"m-selectmenu-button\\\" class=\\\"dropdown-edition\\\">\\r\\n            <button id=\\\"m-select-button\\\" class=\\\"g-cartografia-flecha\\\" title=\\\"{{translations.select_btn}}\\\"></button>\\r\\n            <div id=\\\"myDropdown\\\" class=\\\"dropdown-edition-content\\\">\\r\\n                <div><button id=\\\"m-selectclick-button\\\" class=\\\"icon-edition-select-click\\\" title=\\\"{{translations.select_click}}\\\"></button></div>\\r\\n                <div><button id=\\\"m-selectline-button\\\" class=\\\"icon-edition-select-line\\\" title=\\\"{{translations.select_line}}\\\"></button></div>\\r\\n                <div><button id=\\\"m-selectarea-button\\\" class=\\\"icon-edition-select-area\\\" title=\\\"{{translations.select_area}}\\\"></button></div>\\r\\n                <div><button id=\\\"m-selectall-button\\\" class=\\\"icon-edition-select-all\\\" title=\\\"{{translations.select_all}}\\\"></button></div>\\r\\n                <div><button id=\\\"m-deselectall-button\\\" class=\\\"icon-edition-deselect-all\\\" title=\\\"{{translations.deselect_all}}\\\"></button></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"m-zoommenu-button\\\" class=\\\"dropdown-edition\\\">\\r\\n            <button id=\\\"m-zoom-button\\\" class=\\\"g-cartografia-zoom\\\" title=\\\"{{translations.zoom}}\\\"></button>\\r\\n            <div id=\\\"myDropdown-edition\\\" class=\\\"dropdown-edition-content\\\">\\r\\n                <div><button id=\\\"m-zoomsandbox-button\\\" class=\\\"icon-edition-zoom-sandbox\\\" title=\\\"{{translations.zoom_sandbox}}\\\"></button></div>\\r\\n                <div><button id=\\\"m-zoomselect-button\\\" class=\\\"icon-edition-zoom-selection\\\" title=\\\"{{translations.zoom_selection}}\\\"></button></div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button id=\\\"m-draw-button\\\" class=\\\"g-cartografia-editar\\\" title=\\\"{{translations.geometry_draw}}\\\"></button>\\r\\n        <button id=\\\"m-snapping-button\\\" class=\\\"icon-edition-snapping\\\" title=\\\"{{translations.snapping}}\\\"></button>\\r\\n        <button id=\\\"m-modify-button\\\" class=\\\"icon-edition-modify-polygon\\\" title=\\\"{{translations.modify_polygon}}\\\"></button>\\r\\n        <button id=\\\"m-splitpolygon-button\\\" class=\\\"g-cartografia-linea\\\" title=\\\"{{translations.geometry_divide}}\\\"></button>\\r\\n        <button id=\\\"m-unir-button\\\" class=\\\"icon-edition-union\\\" title=\\\"{{translations.union}}\\\"></button>\\r\\n        <button id=\\\"m-vaciado-button\\\" class=\\\"icon-edition-empty-polygon\\\" title=\\\"{{translations.empty_polygon}}\\\"></button>\\r\\n        <button id=\\\"m-intersect-button\\\" class=\\\"icon-edition-intersection\\\" title=\\\"{{translations.intersection}}\\\"></button>\\r\\n        <button id=\\\"m-removefromsandbox-button\\\" class=\\\"icon-edition-delete-selected\\\" title=\\\"{{translations.delete_selected}}\\\"></button>\\r\\n    </div>\\r\\n</div>\";","module.exports = \"<div class=\\\"m-dialog {{severity}}\\\">\\r\\n   <div class=\\\"m-modal\\\">\\r\\n      <div class=\\\"m-content\\\">\\r\\n         <div class=\\\"m-title\\\">\\r\\n            <i class=\\\"m-icon\\\"></i>\\r\\n            <span>{{{title}}}</span>\\r\\n         </div>\\r\\n         <div class=\\\"m-message\\\">{{{message}}}\\r\\n            {{#if layers}}\\r\\n            <br>\\r\\n            <select class=\\\"m-layer-selection\\\">\\r\\n               {{#each layers}}\\r\\n               <option value=\\\"{{{this.name}}}\\\">{{this.name}}</option>\\r\\n               {{/each}}\\r\\n             </select> \\r\\n             {{/if}}\\r\\n         </div>\\r\\n         <div id=\\\"m-edition-dialog-button-aceptar\\\" class=\\\"m-edition-dialog-button\\\">\\r\\n            <button>{{translations.accept_btn}}</button>\\r\\n         </div>\\r\\n         <div id=\\\"m-edition-dialog-button-cancelar\\\" class=\\\"m-edition-dialog-button\\\">\\r\\n            <button>{{translations.cancel_btn}}</button>\\r\\n         </div>\\r\\n      </div>\\r\\n   </div>\\r\\n</div>\";","// @namespace(\"M.impl\")\r\nexport default class editionLayer extends M.impl.Layer {\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. \r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Layer}\r\n   * @api stable\r\n   */\r\n  constructor(base) {\r\n\r\n    super();\r\n    /**\r\n     * Type of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.base_ = base;\r\n    /**\r\n     * Type of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.map_ = base.facadeMap_;\r\n    /**\r\n     * Type of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.ol3Layer_ = null;\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.isVisible_ = true;\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.isModified_ = false;\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.sandBoxFeatures_ = [];\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.sandBoxLayer_ = null;\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.selectedFeatures_ = [];\r\n    /**\r\n     * Name of the layer\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.deletedFeatures_ = [];\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.geometry = undefined;\r\n\r\n    this.type_ = 'MultiPolygon';\r\n\r\n    this.addTo(this.map_);\r\n\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  addTo() {\r\n    this.sandBoxLayer_ = new M.layer.Vector();\r\n    this.sandBoxLayer_.name = 'editionLayer';\r\n    this.sandBoxLayer_.setZIndex(M.impl.Map.Z_INDEX[M.layer.type.WFS] + 999);\r\n    this.map_.addLayers(this.sandBoxLayer_);\r\n    this.ol3Layer_ = this.sandBoxLayer_.getImpl().getOL3Layer();\r\n    this.ol3Layer_.setStyle(this.selectableStyle(this.getSandBoxStyle()));\r\n    this.sandBoxLayer_.setStyle(new M.style.Polygon({\r\n      fill: {\r\n        color: 'red',\r\n        opacity: 0.5,\r\n      },\r\n      stroke: {\r\n        color: '#FF0000',\r\n        width: 2\r\n      }\r\n    }))\r\n    this.setVisible(true);\r\n  }\r\n\r\n\r\n  setStyle(style) {\r\n    this.sandBoxLayer_.setStyle(style);\r\n  }\r\n\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  selectableStyle(style) {\r\n    var this_ = this;\r\n    return function () {\r\n      if (this_.base_.highlightControl.getImpl().highlightInteraction_ === null) {\r\n        return style;\r\n      } else {\r\n        return this_.base_.highlightControl.getImpl().highlightInteraction_.getFeatures().getArray().indexOf(this) == -1 ? style : this_.base_.highlightControl.getImpl().highlightStyle;\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getType() {\r\n    // TODO: Poder especificar tipo de geometria de la capa en el plugin\r\n    return this.type_;\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  setType(tipoGeometria) {\r\n\r\n    this.type_ = tipoGeometria;\r\n\r\n    // Se adapta el estilo al tipo de geometria\r\n    if (tipoGeometria === 'MultiPoint' || tipoGeometria === 'Point') {\r\n      this.sandBoxLayer_.setStyle(new M.style.Point({\r\n        radius: 5,\r\n        fill: {\r\n          color: 'red',\r\n          opacity: 0.5\r\n        },\r\n        stroke: {\r\n          color: '#FF0000'\r\n        }\r\n      }));\r\n    } else if (tipoGeometria === 'MultiPolygon' || tipoGeometria === 'Polygon') {\r\n      this.sandBoxLayer_.setStyle(new M.style.Polygon({\r\n        fill: {\r\n          color: 'red',\r\n          opacity: 0.5,\r\n        },\r\n        stroke: {\r\n          color: '#FF0000',\r\n          width: 2\r\n        }\r\n      }));\r\n    } else if (tipoGeometria === 'MultiLineString' || tipoGeometria === 'LineString') {\r\n      // TODO: LINEAL\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getImplLayer() {\r\n    return this.ol3Layer_;\r\n  }\r\n\r\n  /**\r\n   * This function returns an olFeature when a Mapea feature is passed as a paremeter\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {Object} Mfeature\r\n   * @returns {Object} olFeature\r\n   * @api stable\r\n   */\r\n  getImplFeature(Mfeature) {\r\n    return Mfeature.getImpl().getOLFeature();\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getFeatureCollectionById(idFeature) {\r\n    var features = this.ol3Layer_.getSource().getFeatures();\r\n    for (let i = 0; i < features.length; i++) {\r\n      if (features[i].getId() === idFeature) {\r\n        return new ol.Collection([features[i]]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getFeatureCollection() {\r\n    var features = this.ol3Layer_.getSource().getFeatures();\r\n    return new ol.Collection([features]);\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  // DEVUELVE OL.\r\n  getSelectedFeatureCollection() {\r\n    var features = [];\r\n    for (let i = 0; i < this.selectedFeatures_.length; i++) {\r\n      features.push(this.selectedFeatures_[i].getImpl().getOLFeature());\r\n    }\r\n    return new ol.Collection(features);\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getOLFeatures() {\r\n    return this.ol3Layer_.getSource().getFeatures();\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getFeatures() {\r\n    return this.sandBoxLayer_.getFeatures();\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  addFeatures(features) {\r\n    return this.sandBoxLayer_.addFeatures(features);\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  hasGeometry() {\r\n    var features = this.ol3Layer_.getSource().getFeatures();\r\n    return features.length > 0;\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getGeometry() {\r\n    return this.geometry;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getCoordinatesFromFeature(feature) {\r\n    return feature.getGeometry().getCoordinates();\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getCoordinatesFromFeatureById(idFeature) {\r\n    const foundFeature = this.getFeatureById(idFeature);\r\n    if (foundFeature !== null) {\r\n      return foundFeature.getGeometry().getCoordinates();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  readGML3Features(gmlText) {\r\n    var proj = new ol.proj.Projection({\r\n      code: 'http://www.opengis.net/gml/srs/epsg.xml#25830',\r\n      axis: 'enu'\r\n    });\r\n    ol.proj.addEquivalentProjections([ol.proj.get(this.map_.getProjection().code), proj]);\r\n    return new ol.format.GML3().readFeatures(gmlText, this.map_.getProjection());\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  addFeature(olFeature) {\r\n    var geojsonFormat = new ol.format.GeoJSON();\r\n    var jsonFeature = geojsonFormat.writeFeatureObject(olFeature);\r\n    var newFeature = new M.Feature(olFeature.getId(), jsonFeature);\r\n    this.sandBoxLayer_.addFeatures(newFeature);\r\n    return newFeature;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeFeatureById(featureId) {\r\n    var foundFeature = this.sandBoxLayer_.getFeatureById(featureId);\r\n    if (foundFeature !== undefined) {\r\n      this.sandBoxFeatures_ = [];\r\n      this.selectedFeatures_ = [];\r\n      this.sandBoxLayer_.removeFeatures([foundFeature]);\r\n      this.deletedFeatures_.push(foundFeature);\r\n      this.isModified_ = true;\r\n      return [foundFeature.getId()];\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeFeature(MFeature) {\r\n    var this_ = this;\r\n    this.sandBoxLayer_.getFeatures().forEach(function (feature) {\r\n      if (feature === MFeature) {\r\n        this_.sandBoxLayer_.removeFeatures([feature]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeAllFeatures() {\r\n    var features = this.sandBoxLayer_.getFeatures();\r\n    this.sandBoxLayer_.removeFeatures(features);\r\n    Array.prototype.push.apply(this.deletedFeatures_, features);\r\n    this.sandBoxFeatures_ = [];\r\n    this.selectedFeatures_ = [];\r\n    this.isModified_ = true;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  addFeaturesToSandBox(featuresArray) {\r\n    var this_ = this;\r\n    featuresArray.forEach(function (feature, index, array) {\r\n      var featureAlreadyAdded = false;\r\n      for (let i = 0; i < this_.sandBoxLayer_.getFeatures().length; i++) {\r\n        if (this_.sandBoxLayer_.getFeatures()[i].getImpl().getId() === Number(feature.id)) {\r\n          featureAlreadyAdded = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!featureAlreadyAdded) {\r\n        var jsonFeature = {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": {\r\n            \"type\": feature.type,\r\n            \"coordinates\": feature.coordinates\r\n          }\r\n        };\r\n\r\n        var newFeature = new M.Feature(feature.id, jsonFeature);\r\n        this_.sandBoxLayer_.addFeatures(newFeature);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  addNewFeatureToSandBox(olFeature) {\r\n    var geojsonFormat = new ol.format.GeoJSON();\r\n    var jsonFeature = geojsonFormat.writeFeatureObject(olFeature);\r\n    var newFeature = new M.Feature(olFeature.getId(), jsonFeature);\r\n    this.sandBoxLayer_.addFeatures(newFeature);\r\n  }\r\n\r\n  addNewMFeatureToSandBox(feature) {\r\n    this.sandBoxLayer_.addFeatures(feature);\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeFeaturesFromSandBox(featuresArray) {\r\n    var i = featuresArray.length;\r\n    while (i--) {\r\n      var foundFeature = this.sandBoxLayer_.getFeatureById(featuresArray[i].getId());\r\n      if (foundFeature !== undefined) {\r\n        if (foundFeature instanceof M.Feature) {\r\n          this.unselectFeature(foundFeature.getImpl().getOLFeature());\r\n        } else {\r\n          this.unselectFeature(foundFeature);\r\n        }\r\n        this.sandBoxLayer_.removeFeatures(foundFeature);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  selectFeature(olFeature) {\r\n    var foundFeature = this.sandBoxLayer_.getFeatureById(olFeature.getId());\r\n    if (foundFeature !== undefined) {\r\n      foundFeature.getImpl().getOLFeature().setStyle(this.selectableStyle(this.getSelectedStyle()));\r\n      this.selectedFeatures_.push(foundFeature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  unselectFeature(olFeature) {\r\n    var i = this.selectedFeatures_.length;\r\n    while (i--) {\r\n      if (this.selectedFeatures_[i].getImpl().getOLFeature().getId() === olFeature.getId()) {\r\n        this.selectedFeatures_[i].getImpl().getOLFeature().setStyle(this.selectableStyle(this.getSandBoxStyle()));\r\n        this.selectedFeatures_.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  selectAllFeatures() {\r\n    var allFeatures = this.sandBoxLayer_.getFeatures();\r\n    for (let i = 0; i < allFeatures.length; i++) {\r\n      if (this.selectedFeatures_.length > 0) {\r\n        var index = this.selectedFeatures_.indexOf(allFeatures[i]);\r\n        if (index === -1) {\r\n          this.selectFeature(allFeatures[i]);\r\n        }\r\n      } else {\r\n        this.selectFeature(allFeatures[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  unselectAllFeatures() {\r\n    var allFeatures = this.sandBoxLayer_.getFeatures();\r\n    for (let i = 0; i < allFeatures.length; i++) {\r\n      allFeatures[i].getImpl().getOLFeature().setStyle(this.selectableStyle(this.getSandBoxStyle()));\r\n    }\r\n    this.selectedFeatures_ = [];\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getGeometriesExtension() {\r\n    var features = this.ol3Layer_.getSource().getFeatures();\r\n    var extent = new ol.extent.createEmpty();\r\n    features.forEach(function (f, index, array) {\r\n      ol.extent.extend(extent, f.getGeometry().getExtent());\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the features array\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getOLFeaturesExtensionByAttribute(featuresIdArray, attribute) {\r\n    var foundFeatures = [];\r\n    for (let i = 0; i < featuresIdArray.length; i++) {\r\n      var foundFeature = this.getOLFeatureByUniqueAttribute(Number(featuresIdArray[i]), attribute);\r\n      foundFeatures.push(foundFeature);\r\n    }\r\n\r\n    var extent = new ol.extent.createEmpty();\r\n    foundFeatures.forEach(function (f, index, array) {\r\n      if (f !== null) {\r\n        ol.extent.extend(extent, f.getGeometry().getExtent());\r\n      }\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the features array\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getOLFeaturesExtension(Mfeatures) {\r\n    var olFeatures = [];\r\n    for (let i = 0; i < Mfeatures.length; i++) {\r\n      var olFeature = Mfeatures[i].getImpl().getOLFeature();\r\n      olFeatures.push(olFeature);\r\n    }\r\n\r\n    var extent = new ol.extent.createEmpty();\r\n    olFeatures.forEach(function (f, index, array) {\r\n      if (f !== null) {\r\n        ol.extent.extend(extent, f.getGeometry().getExtent());\r\n      }\r\n    });\r\n\r\n    return extent;\r\n  }\r\n\r\n\r\n  /**foundFeature\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  zoomToLayer() {\r\n    if (this.ol3Layer_.getSource().getFeatures().length > 0) {\r\n      var features = this.ol3Layer_.getSource().getFeatures();\r\n      var extent = new ol.extent.createEmpty();\r\n      features.forEach(function (f) {\r\n        ol.extent.extend(extent, f.getGeometry().getExtent());\r\n      });\r\n      this.map_.getMapImpl().getView().fit(extent, { duration: 500 });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the features array\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  zoomToFeatures(Mfeatures) {\r\n    try {\r\n      let extent = M.impl.utils.getFeaturesExtent(Mfeatures);\r\n      this.map_.setBbox(extent);\r\n    } catch (e) {\r\n      M.dialog.info(\"No existe ninguna geometría asociada\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the features array\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  zoomToFeaturesByIdsArray(featuresIdArray, attribute) {\r\n    try {\r\n      var extent = this.getOLFeaturesExtensionByAttribute(featuresIdArray, attribute);\r\n      this.map_.getMapImpl().getView().fit(extent, { maxZoom: 12, duration: 500 });\r\n    } catch (e) {\r\n      M.dialog.info(\"No existe ninguna geometría asociada\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  zoomToFeatureById(featureId) {\r\n    var foundFeature = this.getFeatureById(featureId);\r\n    if (foundFeature !== null) {\r\n      var extent = new ol.extent.createEmpty();\r\n      ol.extent.extend(extent, foundFeature.getGeometry().getExtent());\r\n      this.map_.getMapImpl().getView().fit(extent, { maxZoom: 12, duration: 500 });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getMFeatureByUniqueAttribute(value, attr) {\r\n    var MFeatures = this.sandBoxLayer_.getFeatures();\r\n    for (let i = 0; i < MFeatures.length; i++) {\r\n      if (MFeatures[i].getAttribute(attr) === value) {\r\n        return MFeatures[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getFeatureById(featureId) {\r\n    let foundFeature = null;\r\n    if (this.ol3Layer_.getSource().getFeatures().length > 0) {\r\n      var features = this.ol3Layer_.getSource().getFeatures();\r\n      features.forEach(function (f, index, array) {\r\n        if (f.getId() === featureId) {\r\n          foundFeature = f;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return foundFeature;\r\n  }\r\n\r\n  getMFeatureById(featureId) {\r\n    let foundFeature = null;\r\n    foundFeature = this.sandBoxLayer_.getFeatureById(featureId);\r\n    return foundFeature;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getOLFeatureByUniqueAttribute(value, attr) {\r\n    let foundFeature = null;\r\n    if (this.ol3Layer_.getSource().getFeatures().length > 0) {\r\n      var features = this.ol3Layer_.getSource().getFeatures();\r\n      features.forEach(function (f, index, array) {\r\n        if (f.get(attr) === value) {\r\n          foundFeature = f;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    return foundFeature;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getDeletedFeatures() {\r\n    return this.deletedFeatures_;\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  clearDeletedFeaturesArray() {\r\n    this.deletedFeatures_ = [];\r\n  }\r\n\r\n  /**\r\n   * Zooms the view to the layer extent\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  rollbackFeatures(clonedFeatures) {\r\n    this.ol3Layer_.getSource().addFeatures(clonedFeatures);\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  clear() {\r\n    this.ol3Layer_.getSource().clear();\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  refresh() {\r\n    this.ol3Layer_.getSource().refresh();\r\n  }\r\n\r\n  /**\r\n   * This function destroys this layer, clearing the HTML\r\n   * and unregistering all events\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    var olMap = this.map_.getMapImpl();\r\n    if (!M.utils.isNullOrEmpty(this.ol3Layer_)) {\r\n      olMap.removeLayer(this.ol3Layer_);\r\n      this.ol3Layer_ = null;\r\n    }\r\n    this.map_.removeLayers(this.sandBoxLayer_);\r\n    this.map_ = null;\r\n    this.popup_ = null;\r\n    this.sandBoxFeatures_ = [];\r\n    this.name = null;\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getSandBoxStyle() {\r\n    return new ol.style.Style({\r\n      fill: new ol.style.Fill({\r\n        color: [93, 95, 229, 0.2]\r\n      }),\r\n      stroke: new ol.style.Stroke({\r\n        color: 'blue',\r\n        width: 2\r\n      }),\r\n      image: new ol.style.Circle({\r\n        radius: 4,\r\n        fill: new ol.style.Fill({\r\n          color: [93, 95, 229, 0.8]\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n          color: 'blue',\r\n          width: 2\r\n        })\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function sets the map object of the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map\r\n   * @api stable\r\n   */\r\n  getSelectedStyle() {\r\n    return new ol.style.Style({\r\n      fill: new ol.style.Fill({\r\n        color: [249, 232, 6, 0.1]\r\n      }),\r\n      stroke: new ol.style.Stroke({\r\n        color: 'yellow',\r\n        width: 2\r\n      }),\r\n      image: new ol.style.Circle({\r\n        radius: 4,\r\n        fill: new ol.style.Fill({\r\n          color: [249, 232, 6, 0.8]\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n          color: 'yellow',\r\n          width: 2\r\n        }),\r\n      })\r\n    });\r\n  }\r\n\r\n}\r\n","// @namespace(\"M.impl\")\r\nexport default class EditionGeometryBase extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n\r\n    super();\r\n    /**\r\n     * Layer for use in control\r\n     * @private\r\n     * @type {M.layer.WFS}\r\n     */\r\n    this.layer_ = layer;\r\n    /**\r\n     * Store modified features\r\n     * @public\r\n     * @type {array}\r\n     * @api stable\r\n     */\r\n    this.modifiedFeatures = [];\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.interactions_ = [];\r\n  }\r\n\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map - Map to add the plugin\r\n   * @param {HTMLElement} element - Container control\r\n   * @api stable\r\n   */\r\n  addTo(map, element) {\r\n    super.addTo(map, element);\r\n  }\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature, entityLayer) {\r\n    if (this.interactions_.length < 1) {\r\n      this.createInteraction(callback, idFeature, entityLayer);\r\n      for (let i = 0; i < this.interactions_.length; i++) {\r\n        this.layer_.map_.getMapImpl().addInteraction(this.interactions_[i]);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.layer_.map_.getControls().length; i++) {\r\n      if (this.layer_.map_.getControls()[i].activated) {\r\n        this.layer_.map_.getControls()[i].deactivate();\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.interactions_.length; i++) {\r\n      this.interactions_[i].setActive(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function deactivate control\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    if (this.interactions_.length > 0) {\r\n      for (let i = 0; i < this.interactions_.length; i++) {\r\n        this.interactions_[i].setActive(false);\r\n        this.layer_.map_.getMapImpl().removeInteraction(this.interactions_[i]);\r\n      }\r\n      this.interactions_ = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function destroys this control and cleaning the HTML\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.layer_.map_.getMapImpl().removeControl(this);\r\n    this.layer_ = null;\r\n    this.interactions_ = [];\r\n    this.modifiedFeatures = null;\r\n  }\r\n\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\n\r\nexport default class EditionSelectGeometry extends EditionGeometryBaseImpl {\r\n\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionSelectGeometry\r\n   *            control\r\n   * \r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction.Select}\r\n     */\r\n    this.selectInteraction_ = null;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  createInteraction(callback, idFeature) {\r\n    this.selectInteraction_ = new ol.interaction.Select({\r\n      layers: [this.layer_.sandBoxLayer_.getImpl().getOL3Layer()],\r\n      multi: true,\r\n      condition: ol.events.condition.click\r\n    });\r\n\r\n    this.selectInteraction_.on('select', callback, this);\r\n    this.interactions_.push(this.selectInteraction_);\r\n  }\r\n}\r\n","import EditionSelectGeometryImpl from 'impl/editionSelectGeometry';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionSelectGeometry extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionSelectGeometry\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionSelectGeometryImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionSelectGeometry');\r\n    }\r\n\r\n    // 2. implementation of this control\r\n    let impl = new EditionSelectGeometryImpl(map, layer);\r\n    super(impl, \"editionSelectGeometry\");\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.name = 'editionSelectGeometry';\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature) {\r\n    this.getImpl().activate(callback, idFeature);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    return (obj instanceof M.control.EditionSelectGeometry);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for draw\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {object} layer - Layer\r\n   * @api stable\r\n   */\r\n  setLayer(layer) {\r\n    this.getImpl().layer_ = layer;\r\n  }\r\n}\r\n","// @namespace(\"M.impl.control\")\r\nexport default class editionControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the editionControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor() {\r\n    super();\r\n  }\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, html) {\r\n    //obtengo la interacción por defecto del dblclick para manejarla\r\n    let olMap = map.getMapImpl();\r\n    olMap.getInteractions().forEach(interaction => {\r\n      if (interaction instanceof ol.interaction.DoubleClickZoom) {\r\n        this.dblClickInteraction_ = interaction;\r\n      }\r\n    });\r\n\r\n    // super addTo - don't delete\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  //** Add your own functions */\r\n  activateClick(map) {\r\n    //desactivo el zoom al dobleclick\r\n    this.dblClickInteraction_.setActive(false);\r\n\r\n    //añado un listener al evento dblclick\r\n    let olMap = map.getMapImpl();\r\n    olMap.on('dblclick', function(evt) {\r\n      //disparo un custom event con las coordenadas del dobleclick\r\n      let customEvt = new CustomEvent('mapclicked', {\r\n        detail: evt.coordinate,\r\n        bubbles: true\r\n      });\r\n      map.getContainer().dispatchEvent(customEvt);\r\n    });\r\n  }\r\n\r\n  deactivateClick(map) {\r\n    //activo el zoom al dobleclick\r\n    this.dblClickInteraction_.setActive(true);\r\n\r\n    //elimino el listener del evento\r\n    map.getMapImpl().removeEventListener('dblclick');\r\n  }\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\nexport default class EditionHighlightGeometry extends EditionGeometryBaseImpl {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionHighlightGeometry\r\n   *            control\r\n   * \r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction.Select}\r\n     */\r\n    this.highlightInteraction_ = null;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  createInteraction(callback, idFeature) {\r\n    var this_ = this;\r\n    // el estilo debe depender del tipo de geometria\r\n    this.highlightStyle = [\r\n      new ol.style.Style({\r\n        fill: new ol.style.Fill({\r\n          color: [249, 177, 10, 0.2]\r\n        })\r\n      }),\r\n      new ol.style.Style({\r\n        stroke: new ol.style.Stroke({\r\n          color: 'orange',\r\n          width: 2.5\r\n        })\r\n      })\r\n    ];\r\n\r\n    this.highlightInteraction_ = new ol.interaction.Select({\r\n      layers: [this.layer_.sandBoxLayer_.getImpl().getOL3Layer()],\r\n      condition: ol.events.condition.pointerMove,\r\n      style: this_.highlightStyle\r\n    });\r\n\r\n    this.interactions_.push(this.highlightInteraction_);\r\n  }\r\n}\r\n","import EditionHighlightGeometryImpl from 'impl/editionHighlightGeometry';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionHighlightGeometry extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionHighlightGeometry\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionHighlightGeometryImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionHighlightGeometry');\r\n    }\r\n\r\n    let impl = new EditionHighlightGeometryImpl(map, layer);\r\n    super(impl, \"editionHighlightGeometry\");\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.name = 'editionHighlightGeometry';\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature) {\r\n    this.getImpl().activate(callback, idFeature);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  deactivate() {\r\n    this.getImpl().deactivate();\r\n    this.getImpl().highlightInteraction_ = null;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    return (obj instanceof M.control.EditionHighlightGeometry);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for draw\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {object} layer - Layer\r\n   * @api stable\r\n   */\r\n  setLayer(layer) {\r\n    this.getImpl().layer_ = layer;\r\n  }\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\nexport default class EditionInsertGeometry extends EditionGeometryBaseImpl {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a EditionInsertGeometry\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction}\r\n     */\r\n    this.drawInteraction_ = null;\r\n  }\r\n\r\n  /**\r\n   * This function creates the interaction to draw\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {object} callback - Callback function in activation\r\n   * @api stable\r\n   */\r\n  createInteraction(callback, idFeature, entityLayer) {\r\n\r\n    var style = null;\r\n\r\n    var layerType = this.layer_.getType();\r\n\r\n    if (entityLayer !== null && entityLayer !== undefined) {\r\n      layerType = entityLayer.getType();\r\n    }\r\n\r\n    var geometryType = this.getSimpleType(layerType);\r\n    // el estilo cambia segun tipo de geometria\r\n    if (layerType == 'Point') {\r\n      style = new ol.style.Style({\r\n        image: new ol.style.Circle({\r\n          radius: 7,\r\n          fill: new ol.style.Fill({ color: 'withe' }),\r\n          stroke: new ol.style.Stroke({\r\n            color: [255, 0, 0],\r\n            width: 2\r\n          })\r\n        })\r\n      });\r\n\r\n    } else if (layerType == 'Polygon') {\r\n      style = new ol.style.Style({\r\n        fill: new ol.style.Fill({\r\n          color: 'rgba(255, 255, 255, 0.2)'\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n          color: '#ffcc33',\r\n          width: 2\r\n        }),\r\n        image: new ol.style.Circle({\r\n          radius: 4,\r\n          fill: new ol.style.Fill({\r\n            color: '#ffcc33'\r\n          })\r\n        })\r\n      });\r\n\r\n    } else {\r\n      // TODO: LINE\r\n    }\r\n\r\n    this.drawInteraction_ = new ol.interaction.Draw({\r\n      type: geometryType,\r\n      style: style,\r\n    });\r\n\r\n    this.drawInteraction_.on('drawend', callback, this);\r\n\r\n    this.interactions_.push(this.drawInteraction_);\r\n  }\r\n\r\n  /**\r\n   * This function gets the simple type geometry from a complex geometry type\r\n   *\r\n   * @private\r\n   * @param {String} type - Geometry type\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getSimpleType(type) {\r\n    if (type === 'MultiPoint' || type === 'Point') {\r\n      return 'Point';\r\n    } else if (type === 'MultiPolygon' || type === 'Polygon') {\r\n      return 'Polygon';\r\n    } else if (type === 'MultiLineString' || type === 'LineString') {\r\n      return 'LineString';\r\n    }\r\n  }\r\n}\r\n","import EditionInsertGeometryImpl from 'impl/editionInsertGeometry';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionInsertGeometry extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionInsertGeometry\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionInsertGeometryImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionInsertGeometry');\r\n    }\r\n\r\n    let impl = new EditionInsertGeometryImpl(map, layer);\r\n    super(impl, \"editionInsertGeometry\");\r\n\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.name = 'editionInsertGeometry';\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature, entityLayer) {\r\n    this.getImpl().activate(callback, idFeature, entityLayer);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    return (obj instanceof M.control.EditionInsertGeometry);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for draw\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {object} layer - Layer\r\n   * @api stable\r\n   */\r\n  setLayer(layer) {\r\n    this.getImpl().layer_ = layer;\r\n  }\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\nexport default class EditionModifyGeometry extends EditionGeometryBaseImpl {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a EditionModifyGeometry\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction.Modify}\r\n     */\r\n    this.modifyInteraction_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  createInteraction(callback, idFeature) {\r\n    var featuresCollection = this.layer_.getSelectedFeatureCollection();\r\n    // Son features OL\r\n    var style = new ol.style.Style({\r\n      image: new ol.style.Circle({\r\n        radius: 4,\r\n        fill: new ol.style.Fill({\r\n          color: '#ffcc33'\r\n        })\r\n      })\r\n    });\r\n\r\n    this.modifyInteraction_ = new ol.interaction.Modify({\r\n      features: featuresCollection,\r\n      deleteCondition: function(event) {\r\n        return ol.events.condition.shiftKeyOnly(event) && ol.events.condition.singleClick(event);\r\n      },\r\n      style: style\r\n    });\r\n\r\n    this.modifyInteraction_.on('modifyend', callback, this);\r\n    this.interactions_.push(this.modifyInteraction_);\r\n  }\r\n}\r\n","import EditionModifyGeometryImpl from 'impl/editionModifyGeometry';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionModifyGeometry extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionModifyGeometry\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionModifyGeometryImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionModifyGeometry');\r\n    }\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    let impl = new EditionModifyGeometryImpl(map, layer);\r\n    super(impl, \"editionModifyGeometry\");\r\n\r\n    this.name = 'editionModifyGeometry';\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature) {\r\n    this.getImpl().activate(callback, idFeature);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    return (obj instanceof M.control.EditionModifyGeometry);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for draw\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {object} layer - Layer\r\n   * @api stable\r\n   */\r\n  setLayer(layer) {\r\n    this.getImpl().layer_ = layer;\r\n  }\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\nexport default class EditionTemporalGeometry extends EditionGeometryBaseImpl {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a EditionTemporalGeometry\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction}\r\n     */\r\n    this.drawInteraction_ = null;\r\n\r\n  }\r\n\r\n  /**\r\n   * This function creates the interaction to draw\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {object} callback - Callback function in activation\r\n   * @api stable\r\n   */\r\n  createInteraction(callback, geometryType) {\r\n    var style = new ol.style.Style({\r\n      fill: new ol.style.Fill({\r\n        color: 'rgba(255, 255, 255, 0.2)'\r\n      }),\r\n      stroke: new ol.style.Stroke({\r\n        color: '#ffa733',\r\n        width: 2\r\n      }),\r\n      image: new ol.style.Circle({\r\n        radius: 4,\r\n        fill: new ol.style.Fill({\r\n          color: '#ffcc33'\r\n        })\r\n      })\r\n    });\r\n\r\n    this.drawInteraction_ = new ol.interaction.Draw({\r\n      type: geometryType === 'Point' ? 'Point' : geometryType === 'LineString' ? 'LineString' : 'Polygon',\r\n      style: style,\r\n    });\r\n\r\n    this.drawInteraction_.on('drawend', callback, this);\r\n    this.interactions_.push(this.drawInteraction_);\r\n  }\r\n}\r\n","import EditionTemporalGeometryImpl from 'impl/editionInsertTemporalGeometry';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionTemporalGeometry extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionTemporalGeometry\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionTemporalGeometryImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionInsertLine');\r\n    }\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    let impl = new EditionTemporalGeometryImpl(map, layer);\r\n    super(impl, \"editionInsertLine\");\r\n\r\n    this.name = 'editionInsertLine';\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature, layer) {\r\n    this.getImpl().activate(callback, idFeature, layer);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    return (obj instanceof M.control.EditionTemporalGeometry);\r\n  }\r\n}\r\n","import EditionGeometryBaseImpl from 'impl/editionGeometryBase';\r\n\r\n// @namespace(\"M.impl.control\")\r\nexport default class EditionSnapping extends EditionGeometryBaseImpl {\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a EditionSnapping\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    super(map, layer);\r\n    /**\r\n     * Facade map object\r\n     * @public\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = map;\r\n    /**\r\n     * OpenLayers interaction object\r\n     * @public\r\n     * @type {ol.interaction}\r\n     */\r\n    this.snapInteraction_ = null;\r\n  }\r\n\r\n  /**\r\n   * This function creates the interaction to draw\r\n   *\r\n   * @private\r\n   * @function\r\n   * @param {object} callback - Callback function in activation\r\n   * @api stable\r\n   */\r\n  createInteraction(callback, idFeature) {\r\n    this.snapInteraction_ = new ol.interaction.Snap({\r\n      source: this.layer_.getImplLayer().getSource()\r\n    });\r\n\r\n    this.interactions_.push(this.snapInteraction_);\r\n  }\r\n}\r\n","import EditionSnappingImpl from 'impl/editionSnapping';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionSnapping extends M.Control {\r\n  /**\r\n   * @classdesc Main constructor of the class. Creates a EditionSnapping\r\n   * control to draw features on the map.\r\n   *\r\n   * @constructor\r\n   * @param {M.Map} map - Facade map\r\n   * @param {object} layer - Layer for use in control\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map, layer) {\r\n    if (M.utils.isUndefined(EditionSnappingImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionSnapping');\r\n    }\r\n    let impl = new EditionSnappingImpl(map, layer);\r\n    super(impl, \"editionSnapping\");\r\n\r\n    /**\r\n     * Name of the control\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.name = 'editionSnapping';\r\n  }\r\n\r\n\r\n  /**\r\n   * This function activates this interaction control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {object} callback - Callback function in activation\r\n   * @param {object} idFeature\r\n   */\r\n  activate(callback, idFeature) {\r\n    this.getImpl().activate(callback, idFeature);\r\n    this.activated = true;\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals to this control\r\n   *\r\n   * @function\r\n   * @api stable\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   */\r\n  equals(obj) {\r\n    //return (obj instanceof M.control.EditorInsertGeometry);\r\n    // era un bug?\r\n    return (obj instanceof M.control.EditionSnapping);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for draw\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {object} layer - Layer\r\n   * @api stable\r\n   */\r\n  setLayer(layer) {\r\n    this.getImpl().layer_ = layer;\r\n  }\r\n}\r\n","// @namespace(\"M.impl.control\")\r\nexport default class EditionGeometryControl extends M.impl.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the EditionGeometryControl.\r\n   *\r\n   * @constructor\r\n   * @extends {M.impl.Control}\r\n   * @api stable\r\n   */\r\n  constructor(map) {\r\n    super();\r\n    this.map = map;\r\n  }\r\n\r\n\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, html) {\r\n    // super addTo\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  getFeaturesFromGeoJson(geojson) {\r\n    var geojsonFormat = new ol.format.GeoJSON();\r\n    return geojsonFormat.readFeatures(geojson);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  getGeoJsonFromFeature(feature) {\r\n    var geojsonFormat = new ol.format.GeoJSON();\r\n    return geojsonFormat.writeFeatureObject(feature);\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  getFeatureRequestBody(requestParams, coordinates) {\r\n    var point = new ol.geom.Point(coordinates);\r\n    var srsName_ = this.map.getProjection().code;\r\n    return new ol.format.WFS().writeGetFeature({\r\n      srsName: srsName_,\r\n      featurePrefix: requestParams.featurePrefix,\r\n      featureTypes: requestParams.featureTypes,\r\n      outputFormat: requestParams.outputFormat,\r\n      maxFeatures: requestParams.maxFeatures,\r\n      filter: ol.format.filter.intersects(requestParams.geomField, point, srsName_)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  getBbox(coordinates) {\r\n    var bbox_ = ol.extent.boundingExtent([coordinates, coordinates]);\r\n    for (let i = 0; i < bbox_.length; i++) {\r\n      if (i == 2 || i == 3) {\r\n        bbox_[i] = bbox_[i] + 0.0000000001;\r\n      }\r\n    }\r\n\r\n    return bbox_;\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  getModifyStyle(olFeature) {\r\n    return [\r\n      new ol.style.Style({\r\n        fill: new ol.style.Fill({\r\n          color: 'rgba(239,245,3,0.25)'\r\n        }),\r\n        stroke: new ol.style.Stroke({\r\n          width: 3,\r\n          color: 'rgba(239,245,3, 0.8)'\r\n        }),\r\n        image: new ol.style.Circle({\r\n          radius: 4,\r\n          fill: new ol.style.Fill({\r\n            color: 'rgba(239,245,3,0.8)'\r\n          }),\r\n          stroke: new ol.style.Stroke({\r\n            color: 'rgba(239,245,3, 1)',\r\n            width: 2\r\n          })\r\n        })\r\n      }),\r\n      new ol.style.Style({\r\n        image: new ol.style.Circle({\r\n          radius: 6,\r\n          fill: new ol.style.Fill({\r\n            color: 'rgba(230,137,16, 0.8)'\r\n          })\r\n        }),\r\n        geometry: function (feature) {\r\n          // return the coordinates of the first ring of the polygon\r\n          var coordinates = olFeature.getGeometry().getCoordinates();\r\n          if (olFeature.getGeometry().getType() === \"MultiPolygon\") {\r\n            coordinates = olFeature.getGeometry().getCoordinates()[0][0];\r\n          } \r\n          return new ol.geom.MultiPoint(coordinates);\r\n        }\r\n      })\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * This function set layer for modify features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.layer.WFS} layer - Layer\r\n   * @api stable\r\n   */\r\n  createOLPolygonFeature(olFeature) {\r\n    var json = olFeature.getGeometry();\r\n    var featureTmp;\r\n\r\n    for (let j = 0; j < json.coordinates.length; j++) {\r\n      var polygon = json.coordinates[j];\r\n      featureTmp = new M.Feature(Math.floor(Math.random() * 1000000), {\r\n        \"type\": \"Polygon\",\r\n        \"geometry\": polygon,\r\n        \"geometry_name\": \"geometry\",\r\n        \"properties\": {}\r\n      });\r\n    }\r\n\r\n    return featureTmp;\r\n  }\r\n}\r\n","import en from './en';\r\nimport es from './es';\r\n\r\n/**\r\n * Default object with es and en translate.\r\n *\r\n * @const\r\n * @type {object}\r\n */\r\nconst translations = {\r\n  en,\r\n  es,\r\n};\r\n\r\nconst getLang = () => {\r\n  let res = 'es';\r\n  if (typeof M.language.getLang === 'function') {\r\n    res = M.language.getLang();\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\n/**\r\n * This function sets a new language translate.\r\n * @param {string} lang\r\n * @param {JSON} json\r\n * @public\r\n * @api\r\n */\r\nexport const addTranslation = (lang, json) => {\r\n  translations[lang] = json;\r\n};\r\n\r\n/**\r\n * This function gets a language translate.\r\n *\r\n * @param {string} lang\r\n * @return {JSON}\r\n * @public\r\n * @api\r\n */\r\nexport const getTranslation = (lang) => {\r\n  return translations[lang];\r\n};\r\n\r\n/**\r\n * This function gets a language value from key\r\n *\r\n * @public\r\n * @param {string}\r\n * @param {string}\r\n * @return {string}\r\n * @public\r\n * @api\r\n */\r\n\r\nexport const getValue = (keyPath, lang = getLang()) => {\r\n  const translation = getTranslation(lang);\r\n  let value = '';\r\n  if (M.utils.isNullOrEmpty(translation)) {\r\n    /* eslint-disable no-console */\r\n    console.warn(`The translation '${lang}' has not been defined.`);\r\n  } else {\r\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\r\n  }\r\n\r\n  return value;\r\n};\r\n","import template from 'templates/editionDialog';\r\nimport { getValue } from './i18n/language';\r\n\r\n/**\r\n * This function shows the edition dialog\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n * @param {string} Dialog message\r\n * @param {string} Dialog title\r\n * @param {object} Message severity\r\n * @param {object} Accept callback function\r\n * @param {object} Cancel callback function\r\n * @returns {Promise}\r\n */\r\nexport const show = (message, title, severity, acceptFn, cancelFn, layers) => {\r\n  const html = M.template.compileSync(template, {\r\n    jsonp: false,\r\n    vars: {\r\n      'message': message,\r\n      'title': title,\r\n      'severity': severity,\r\n      'layers': layers,\r\n      translations: {\r\n        accept_btn: getValue('accept_btn'),\r\n        cancel_btn: getValue('cancel_btn')\r\n      }\r\n    }\r\n  });\r\n  addEvents(html, acceptFn, cancelFn);\r\n};\r\n\r\n/**\r\n * This function closes the edition dialog\r\n * \r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const close = () => {\r\n  var element = document.querySelector('div.m-dialog');\r\n  document.querySelector('div.m-mapea-container').removeChild(element);\r\n};\r\n\r\n/**\r\n * This function add the events to the specified html element\r\n *\r\n * @private\r\n * @function\r\n * @param {HTMLElement} html template\r\n * @param {object} Accept callback function\r\n * @param {object} Cancel callback function\r\n * @api stable\r\n */\r\nexport const addEvents = (html, acceptFn, cancelFn) => {\r\n  // append new dialog\r\n  var mapeaContainer = document.querySelector('div.m-mapea-container');\r\n\r\n  // adds listener to accept button click\r\n  var acceptButton = html.querySelector('#m-edition-dialog-button-aceptar > button');\r\n\r\n  // adds listener to cancel button click\r\n  var cancelButton = html.querySelector('#m-edition-dialog-button-cancelar > button');\r\n  if (cancelFn === undefined) {\r\n    cancelButton.addEventListener('click', close, false);\r\n  } else {\r\n    cancelButton.addEventListener('click', cancelFn, false);\r\n  }\r\n\r\n  var selectLayer = html.querySelector('.m-layer-selection');\r\n  if (selectLayer) {\r\n    acceptButton.addEventListener('click', function () { acceptFn(selectLayer.value) }, false);\r\n  } else {\r\n    acceptButton.addEventListener('click', acceptFn, false);\r\n  }\r\n\r\n  mapeaContainer.appendChild(html);\r\n};\r\n","/*jshint undef:false */\r\n/**\r\n *\r\n * @function\r\n * @api\r\n */\r\nexport const bufferFeature = (feature, distance) => {\r\n  feature.setGeometry(bufferGeometry(feature.getGeoJSON().geometry, distance));\r\n  return feature;\r\n};\r\n\r\n/**\r\n * Buffer sobre geometry geoJSON, devuelve geoJSON\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const bufferGeometry = (geometry, distance) => {\r\n  let jstsGeom = getJSTSGeometry(geometry);\r\n  let bufferGeometry = jstsGeom.buffer(distance);\r\n  let finalGeometry = getGeoJSONGeometry(bufferGeometry);\r\n  return finalGeometry;\r\n};\r\n\r\n/**\r\n * @public\r\n * @function\r\n * @param {*} jstsGeometry \r\n */\r\nexport const getGeoJSONGeometry = (jstsGeometry) => {\r\n  let writter = new jsts.io.GeoJSONWriter();\r\n  let geojsonGeometry = writter.write(jstsGeometry);\r\n  return geojsonGeometry;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const unionFeature = (feature1, feature2) => {\r\n  // Clonamos el feature1\r\n  let newFeature = new M.Feature(feature1.getId(), feature1.getGeoJSON());\r\n  newFeature.setGeometry(unionGeometry(feature1.getGeometry(), feature2.getGeometry()));\r\n  return newFeature;\r\n\r\n};\r\n\r\nexport const unionGeometry = (geom1, geom2) => {\r\n  let jstsGeom1 = getJSTSGeometry(geom1);\r\n  let jstsGeom2 = getJSTSGeometry(geom2);\r\n  let unionGeometry = jstsGeom1.union(jstsGeom2);\r\n\r\n  return getGeoJSONGeometry(unionGeometry);\r\n};\r\n\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const splitFeature = (feature, geometryLine) => {\r\n  let jsts_geom = getJSTSGeometry(feature.getGeometry());\r\n\r\n  if (jsts_geom._geometries !== undefined) {\r\n    jsts_geom = jsts_geom._geometries[0];\r\n  }\r\n\r\n  let jsts_geom_line = getJSTSGeometry(geometryLine);\r\n  let union = jsts_geom.getExteriorRing().union(jsts_geom_line);\r\n\r\n  let polygonizer = getPolygonizer();\r\n  polygonizer.add(union);\r\n  let polygons = polygonizer.getPolygons();\r\n  let resultFeatures = [];\r\n\r\n  for (var i = polygons.iterator(); i.hasNext();) {\r\n\r\n    var polygon = i.next();\r\n    let newFeature = new M.Feature(Math.random(), feature.getGeoJSON());\r\n    let totalHoles = jsts_geom.getNumInteriorRing();\r\n\r\n    for (var n = 0; n < totalHoles; n++) {\r\n      let hole = jsts_geom.getInteriorRingN(n);\r\n      let holePolygonizer = getPolygonizer();\r\n      holePolygonizer.add(hole);\r\n      let holePolygons = holePolygonizer.getPolygons();\r\n\r\n      polygon = polygon.difference(holePolygons.iterator().next());\r\n    }\r\n    let impl_geom = getGeoJSONGeometry(polygon);\r\n    newFeature.setGeometry(impl_geom);\r\n    resultFeatures.push(newFeature);\r\n  }\r\n  return resultFeatures;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const intersects = (features, geometryIntersects) => {\r\n  let jsts_geom_intersects = getJSTSGeometry(geometryIntersects);\r\n  let targetFeatures = [];\r\n\r\n  features.forEach(function (feature) {\r\n    var jsts_geom = getJSTSGeometry(feature.getGeometry());\r\n\r\n    if (jsts_geom.intersects(jsts_geom_intersects)) {\r\n      targetFeatures.push(feature);\r\n    }\r\n\r\n  });\r\n  return targetFeatures;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const intersection = (feature1, feature2) => {\r\n  let jsts_geom1 = getJSTSGeometry(feature1.getGeometry());\r\n  let jsts_geom2 = getJSTSGeometry(feature2.getGeometry());\r\n  let resultGeom = jsts_geom1.intersection(jsts_geom2);\r\n\r\n  let intersectionGeom = getGeoJSONGeometry(resultGeom);\r\n  return intersectionGeom;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const difference = (feature, feature2) => {\r\n  var jsts_geom_difference = getJSTSGeometry(feature2.getGeometry());\r\n  var jsts_geom = getJSTSGeometry(feature.getGeometry());\r\n  var resultGeom = jsts_geom.difference(jsts_geom_difference);\r\n\r\n  var impl_geom = getGeoJSONGeometry(resultGeom);\r\n  return impl_geom;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const getJSTSGeometry = (geometry) => {\r\n  let parser = new jsts.io.GeoJSONReader();\r\n  let f = parser.read(geometry);\r\n  return f;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const getPolygonizer = () => {\r\n  return new jsts.operation.polygonize.Polygonizer();\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const dividePolygon = (splitFeature, selectedFeature) => {\r\n  let polygon2Divide = getJSTSGeometry(selectedFeature.getGeometry());\r\n  if (polygon2Divide._geometries !== undefined) {\r\n    polygon2Divide = polygon2Divide._geometries[0];\r\n  }\r\n\r\n  let line4Divide = getJSTSGeometry(splitFeature.getGeometry());\r\n\r\n  try {\r\n    let union = polygon2Divide.getExteriorRing().union(line4Divide);\r\n\r\n    let polygonizer = new jsts.operation.polygonize.Polygonizer();\r\n    polygonizer.add(union);\r\n    let polygons = polygonizer.getPolygons();\r\n    let polygons2Create = polygons;\r\n    let newHole = null;\r\n\r\n    if (polygons.size() < 2) {\r\n      try {\r\n        let geojsonRepresentation = selectedFeature.getGeometry();\r\n        // eslint-disable-next-line no-undef\r\n        let polygon2Divide2Line = turf.polygonToLine(geojsonRepresentation);\r\n        polygon2Divide2Line.geometry.coordinates.push(splitFeature.getGeometry().coordinates);\r\n        // eslint-disable-next-line no-undef\r\n        let poligonos = turf.lineToPolygon(polygon2Divide2Line);\r\n        // eslint-disable-next-line no-undef\r\n        newHole = turf.polygon([poligonos.geometry.coordinates[poligonos.geometry.coordinates.length - 1]]);\r\n        return dividePolygonWithHoles(newHole, selectedFeature);\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    let exteriorRingTargetPoly = polygon2Divide.getExteriorRing();\r\n    let polygonizerTarget = new jsts.operation.polygonize.Polygonizer();\r\n    polygonizerTarget.add(exteriorRingTargetPoly);\r\n\r\n\r\n    if (polygonizer.getGeometry().getArea() - polygonizerTarget.getGeometry().getArea() > 0.1) {\r\n      return -1;\r\n    } else {\r\n      if (polygon2Divide.getNumInteriorRing() > 0) {\r\n        if (!line4Divide.isSimple()) {\r\n          newHole = getNewHolePolygon(polygon2Divide, line4Divide);\r\n          return dividePolygonWithHolesJSTS(newHole, polygon2Divide, selectedFeature);\r\n        } else {\r\n          var result = getPolygonsOnHoles(polygonizer, polygon2Divide);\r\n          return dividePolygonWithHolesJSTS(null, result, selectedFeature);\r\n        }\r\n      } else if (polygons.size() < 2) {\r\n        return null;\r\n      }\r\n\r\n      return createDividedPolygons(polygons2Create, selectedFeature);\r\n    }\r\n  } catch (e) {\r\n    //User has tried to divide a multipolygon\r\n    return undefined;\r\n  }\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const getNewHolePolygon = (polygon2Divide, line4Divide) => {\r\n  let polygonizerHole = new jsts.operation.polygonize.Polygonizer();\r\n  let union = polygon2Divide.getExteriorRing().union(line4Divide);\r\n  polygonizerHole.add(union);\r\n  let polygons = polygonizerHole.getPolygons();\r\n  for (let i = polygons.iterator(); i.hasNext();) {\r\n    const polygon = i.next();\r\n    if (polygon._holes.length > 0) {\r\n      polygonizerHole.add(polygon._holes[0]);\r\n      return polygonizerHole.getPolygons().get(0);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const getPolygonsOnHoles = (polygonizer, polygon2Divide) => {\r\n  let polygons = polygonizer.getPolygons();\r\n  let polygonizerHoles = new jsts.operation.polygonize.Polygonizer();\r\n  let poly1 = polygons.get(0);\r\n  let poly2 = null;\r\n\r\n  for (let i = 0; i < polygon2Divide._holes.length; i++) {\r\n    polygonizerHoles.add(polygon2Divide._holes[i]);\r\n  }\r\n\r\n  let holes = polygonizerHoles.getPolygons();\r\n\r\n  if (polygons.size() === 2) {\r\n    poly2 = polygons.get(1);\r\n  }\r\n\r\n  for (let j = holes.iterator(); j.hasNext();) {\r\n    const hole = j.next();\r\n    poly1 = poly1.difference(hole);\r\n    if (poly2 !== null)\r\n      poly2 = poly2.difference(hole);\r\n  }\r\n\r\n  let result = [];\r\n  result.push(poly1);\r\n  if (poly2 !== null)\r\n    result.push(poly2);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const dividePolygonWithHolesJSTS = (newHole, polygon2Divide, selectedFeature) => {\r\n  let polygonGeoJson, newFeature;\r\n  let resultFeatures = [];\r\n  let cont = 1;\r\n\r\n  let newPolygons = [];\r\n\r\n  if (newHole !== null) {\r\n    var targetPolygonNoHoles = selectedFeature.getGeometry();\r\n\r\n    var olNewTargetFeatureJSTS = polygon2Divide.difference(newHole);\r\n    var newHoleFeatureJSTS = newHole.intersection(polygon2Divide);\r\n\r\n    var olNewTargetFeatureJSTSgj = getGeoJSONGeometry(olNewTargetFeatureJSTS);\r\n    var newHoleFeatureJSTSgj = getGeoJSONGeometry(newHoleFeatureJSTS);\r\n\r\n    if (olNewTargetFeatureJSTSgj !== null && newHoleFeatureJSTSgj !== null) {\r\n      targetPolygonNoHoles = olNewTargetFeatureJSTSgj;\r\n      newHole = newHoleFeatureJSTSgj;\r\n      newPolygons.push(targetPolygonNoHoles);\r\n      newPolygons.push(newHole);\r\n    } else {\r\n      return -1;\r\n    }\r\n\r\n    for (let i = 0; i < newPolygons.length; i++) {\r\n      newFeature = new M.Feature(Math.random(), {\r\n        \"type\": \"Feature\",\r\n        \"id\": Math.random(),\r\n        \"geometry\": newPolygons[i],\r\n        \"geometry_name\": \"geometry\",\r\n        \"properties\": {}\r\n      });\r\n      resultFeatures.push(newFeature);\r\n      cont += cont;\r\n    }\r\n  } else {\r\n    newPolygons = polygon2Divide;\r\n\r\n    for (let i = 0; i < newPolygons.length; i++) {\r\n      polygonGeoJson = getGeoJSONGeometry(newPolygons[i]);\r\n      newFeature = new M.Feature(Math.random(), {\r\n        \"type\": \"Feature\",\r\n        \"id\": Math.random(),\r\n        \"geometry\": polygonGeoJson,\r\n        \"geometry_name\": \"geometry\",\r\n        \"properties\": {}\r\n      });\r\n      resultFeatures.push(newFeature);\r\n      cont++;\r\n    }\r\n  }\r\n\r\n  return resultFeatures;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const dividePolygonWithHoles = (newHole, selectedFeature) => {\r\n  let resultFeatures = [];\r\n  var cont = 1;\r\n  let newPolygons = [];\r\n  let geomSelected = selectedFeature.getGeometry();\r\n  let geojsonRepresentation = geomSelected;\r\n  let targetPolygonNoHoles = geojsonRepresentation;\r\n\r\n  try {\r\n    // eslint-disable-next-line no-undef\r\n    if (!turf.booleanContains(targetPolygonNoHoles, newHole) && !turf.booleanOverlap(targetPolygonNoHoles, newHole)) {\r\n      return -1;\r\n    }\r\n    let targetPolygonNoHolesJSTS = getJSTSGeometry(geomSelected);\r\n    var newHoleJSTS = getJSTSGeometry(newHole.geometry);\r\n    var olNewTargetFeatureJSTS = targetPolygonNoHolesJSTS.difference(newHoleJSTS);\r\n    var newHoleFeatureJSTS = newHoleJSTS.intersection(targetPolygonNoHolesJSTS);\r\n\r\n    var olNewTargetFeatureJSTSgj = getGeoJSONGeometry(olNewTargetFeatureJSTS);\r\n    var newHoleFeatureJSTSgj = getGeoJSONGeometry(newHoleFeatureJSTS);\r\n\r\n    if (olNewTargetFeatureJSTSgj !== null && newHoleFeatureJSTSgj !== null) {\r\n      targetPolygonNoHoles.geometry = olNewTargetFeatureJSTSgj;\r\n      newHole.geometry = newHoleFeatureJSTSgj;\r\n      newPolygons.push(targetPolygonNoHoles);\r\n      newPolygons.push(newHole);\r\n    } else {\r\n      return -1;\r\n    }\r\n\r\n  } catch (e) {\r\n    return -2;\r\n  }\r\n\r\n  for (let i = 0; i < newPolygons.length; i++) {\r\n    var newFeature = new M.Feature(Math.random(), {\r\n      \"type\": \"Feature\",\r\n      \"id\": Math.random(),\r\n      \"geometry\": newPolygons[i],\r\n      \"geometry_name\": \"geometry\",\r\n      \"properties\": {}\r\n    });\r\n    resultFeatures.push(newFeature);\r\n    cont += cont;\r\n  }\r\n\r\n  return resultFeatures;\r\n};\r\n\r\n/**\r\n * Zooms the view to the layer extent\r\n *\r\n * @public\r\n * @function\r\n * @api stable\r\n */\r\nexport const createDividedPolygons = (polygons, selectedFeature) => {\r\n  let resultFeatures = [];\r\n  let cont = 1;\r\n\r\n  for (let i = polygons.iterator(); i.hasNext();) {\r\n    const polygon = i.next();\r\n    let polygonGeoJson = getGeoJSONGeometry(polygon);\r\n    let newFeature = new M.Feature(Math.random(), selectedFeature.getGeoJSON());\r\n    newFeature.setGeometry(polygonGeoJson);\r\n    resultFeatures.push(newFeature);\r\n    cont += cont;\r\n  }\r\n\r\n  return resultFeatures;\r\n};\r\n","import EditionGeometryControlImpl from 'impl/editionGeometryControl';\r\nimport {\r\n  show,\r\n  close\r\n} from './editionDialog';\r\nimport {\r\n  unionFeature,\r\n  intersects,\r\n  intersection,\r\n  difference,\r\n  dividePolygon,\r\n  getJSTSGeometry\r\n} from './editionSpatialEngine';\r\nimport { getValue } from './i18n/language';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class EditionGeometryControl extends EditionGeometryControlImpl {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a EditionGeometryControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(base) {\r\n    if (M.utils.isUndefined(EditionGeometryControlImpl)) {\r\n      M.exception('La implementación usada no puede crear controles EditionGeometryControl');\r\n    }\r\n\r\n    let impl_ = new EditionGeometryControlImpl(base.facadeMap_);\r\n    super(impl_, \"editionGeometryControl\");\r\n\r\n    this.NAME = \"editionGeometryControl\";\r\n    this.impl_ = impl_;\r\n\r\n    this.facadeMap_ = base.facadeMap_;\r\n    /**\r\n     * Parent prototype by dependency injection\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.base = base;\r\n    /**\r\n     * Html Element\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.element_ = base.element_;\r\n    /**\r\n     * Layer for use in control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.entityLayer_ = base.sandBoxLayer_;\r\n    /**\r\n     * InsertGeomControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.insertGeomControl = this.base.insertGeomControl;\r\n    /**\r\n     * insertTemporalGeomControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.insertTemporalGeomControl = this.base.insertTemporalGeomControl;\r\n    /**\r\n     * modifyGeomControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.modifyGeomControl = this.base.modifyGeomControl;\r\n    /**\r\n     * translateGeomControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.translateGeomControl = this.base.translateGeomControl;\r\n    /**\r\n     * selectGeomControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.selectGeomControl = this.base.selectGeomControl;\r\n    /**\r\n     * snappingControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.snappingControl = this.base.snappingControl;\r\n    /**\r\n     * highlightControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.highlightControl = this.base.highlightControl;\r\n    /**\r\n     * entityAddWFSControl control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.entityAddWFSControl = null;\r\n    /**\r\n     * insertPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.insertPolygonButton = null;\r\n    /**\r\n     * selectPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.selectPolygonButton = null;\r\n    /**\r\n     * selectPolygonByAreaButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.selectPolygonByAreaButton = null;\r\n    /**\r\n     * selectPolygonByLineButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.selectPolygonByLineButton = null;\r\n    /**\r\n     * selectAllSandboxPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.selectAllSandboxPolygonButton = null;\r\n    /**\r\n     * modifyPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.modifyPolygonButton = null;\r\n    /**\r\n     * dividePolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.dividePolygonButton = null;\r\n    /**\r\n     * joinPolygonsButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.joinPolygonsButton = null;\r\n    /**\r\n     * intersectPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.intersectPolygonButton = null;\r\n    /**\r\n     * emptyPolygonButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.emptyPolygonButton = null;\r\n    /**\r\n     * zoomToSelectedButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.zoomToSelectedButton = null;\r\n    /**\r\n     * addGeomButton button\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.addGeomButton = null;\r\n    /**\r\n     * WFSManager control\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.WFSManagerCtl = null;\r\n\r\n    this.addEvents();\r\n\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * This function add the events to the specified html element\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  addEvents() {\r\n    this.self_ = this;\r\n    this.snappingButton = this.element_.querySelector('#m-snapping-button');\r\n    this.snappingButton.addEventListener('click', this.activateSnapping.bind(this), false);\r\n\r\n    this.zoomMenuElement = this.element_.querySelector('#m-zoommenu-button');\r\n    this.zoomMenuPolygonButton = this.element_.querySelector('#m-zoom-button');\r\n    this.zoomMenuPolygonButtonClass = this.zoomMenuPolygonButton.classList.value;\r\n    this.zoomMenuPolygonButton.addEventListener('click', this.manageSelectedClassInDropdown, false);\r\n    this.zoomMenuElement.addEventListener('mouseover', this.showDropdownContent, false);\r\n\r\n    this.zoomMenuElement.addEventListener('mouseout', this.hideDropdownContent, false);\r\n\r\n    this.zoomDropdownMenu = this.zoomMenuElement.querySelector('#myDropdown');\r\n\r\n    this.zoomToSandBoxButton = this.element_.querySelector('button#m-zoomsandbox-button');\r\n    this.zoomToSandBoxButton.addEventListener('click', this.zoomToSandBox.bind(this), false);\r\n\r\n    this.zoomToSelectedButton = this.element_.querySelector('button#m-zoomselect-button');\r\n    this.zoomToSelectedButton.addEventListener('click', this.zoomToSelection.bind(this), false);\r\n\r\n\r\n    this.selectMenuElement = this.element_.querySelector('#m-selectmenu-button');\r\n    this.selectMenuPolygonButton = this.element_.querySelector('#m-select-button');\r\n    this.selectMenuPolygonButtonClass = this.selectMenuPolygonButton.classList.value;\r\n    this.selectMenuPolygonButton.addEventListener('click', this.manageSelectedClassInDropdown, false);\r\n    this.selectMenuElement.addEventListener('mouseover', this.showDropdownContent, false);\r\n\r\n    this.selectDropdownMenu = this.selectMenuElement.querySelector('#myDropdown');\r\n    this.selectMenuElement.addEventListener('mouseout', this.hideDropdownContent, false);\r\n\r\n\r\n    this.removeFromSandBoxButton = this.element_.querySelector('button#m-removefromsandbox-button');\r\n    this.removeFromSandBoxButton.addEventListener('click', this.removeSelectedFeaturesFromSandBox.bind(this), false);\r\n\r\n    this.selectPolygonButton = this.element_.querySelector('button#m-selectclick-button');\r\n    this.selectPolygonButton.addEventListener('click', this.selectPolygonByClick.bind(this), false);\r\n\r\n    this.selectPolygonByAreaButton = this.element_.querySelector('button#m-selectarea-button');\r\n    this.selectPolygonByAreaButton.addEventListener('click', this.selectPolygonByDraw.bind(this), false);\r\n\r\n    this.selectPolygonByLineButton = this.element_.querySelector('button#m-selectline-button');\r\n    this.selectPolygonByLineButton.addEventListener('click', this.selectPolygonByDraw.bind(this), false);\r\n\r\n    this.selectAllSandboxPolygonButton = this.element_.querySelector('button#m-selectall-button');\r\n    this.selectAllSandboxPolygonButton.addEventListener('click', this.selectAllSandboxPolygon.bind(this), false);\r\n\r\n    this.deselectAllSandboxPolygonButton = this.element_.querySelector('button#m-deselectall-button');\r\n    this.deselectAllSandboxPolygonButton.addEventListener('click', this.deselectAllSandboxPolygon.bind(this), false);\r\n\r\n    this.insertPolygonButton = this.element_.querySelector('button#m-draw-button');\r\n    this.insertPolygonButton.addEventListener('click', this.insertPolygon.bind(this), false);\r\n\r\n    this.modifyPolygonButton = this.element_.querySelector('button#m-modify-button');\r\n    this.modifyPolygonButton.addEventListener('click', this.modifyPolygon.bind(this), false);\r\n\r\n    this.dividePolygonButton = this.element_.getElementsByTagName('button')['m-splitpolygon-button'];\r\n    this.dividePolygonButton.addEventListener('click', this.dividePolygon.bind(this), false);\r\n\r\n    this.joinPolygonsButton = this.element_.querySelector('button#m-unir-button');\r\n    this.joinPolygonsButton.addEventListener('click', this.confirmDialogJoinPolygons.bind(this), false);\r\n\r\n    this.addGeomButton = this.element_.querySelector('button#m-addgeometry-button');\r\n    this.addGeomButton.addEventListener('click', this.addGeom.bind(this), false);\r\n\r\n    this.intersectPolygonButton = this.element_.querySelector('button#m-intersect-button');\r\n    this.intersectPolygonButton.addEventListener('click', this.intersectPolygon.bind(this), false);\r\n\r\n    this.emptyPolygonButton = this.element_.querySelector('button#m-vaciado-button');\r\n    this.emptyPolygonButton.addEventListener('click', this.emptyPolygon.bind(this), false);\r\n  }\r\n\r\n\r\n  /**\r\n   * This function shows the dropdown content\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  showDropdownContent(evt) {\r\n    if (evt.currentTarget.children[1].style.width === \"\" || evt.currentTarget.children[1].style.width === \"0px\") {\r\n      evt.currentTarget.children[0].style.float = \"left\";\r\n      evt.currentTarget.children[1].style.left = \"40px\";\r\n      if (evt.currentTarget.id === \"m-zoommenu-button\") {\r\n        evt.currentTarget.children[1].style.width = \"80px\";\r\n      } else {\r\n        evt.currentTarget.children[1].style.width = \"200px\";\r\n      }\r\n      evt.currentTarget.children[1].style.borderTopRightRadius = '4px';\r\n      evt.currentTarget.children[1].style.borderBottomRightRadius = '4px';\r\n      evt.currentTarget.children[0].style.marginBottom = \"-4px\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function hides the dropdown content\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  hideDropdownContent(evt) {\r\n    evt.currentTarget.children[1].style.width = \"0px\";\r\n  }\r\n\r\n  /**\r\n   * This function manages the selected class in dropdown\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  manageSelectedClassInDropdown(evt) {\r\n    var selectedClass;\r\n    if (evt.currentTarget.id === 'm-select-button' && evt.currentTarget.classList.value !== 'g-cartografia-flecha') {\r\n      if (this.selectMenuPolygonButtonClass === 'g-cartografia-flecha') {\r\n        selectedClass = this.selectMenuPolygonButtonClass;\r\n        evt.currentTarget.nextElementSibling.style.width = \"0px\";\r\n        evt.currentTarget.classList.value = selectedClass;\r\n        this.deactiveControls();\r\n      }\r\n    } else if (evt.currentTarget.offsetParent.previousElementSibling !== null && evt.currentTarget.offsetParent.previousElementSibling.id !== \"m-zoom-button\") {\r\n      selectedClass = evt.currentTarget.classList.value;\r\n      evt.currentTarget.offsetParent.style.width = \"0px\";\r\n      evt.currentTarget.offsetParent.previousElementSibling.classList.value = selectedClass;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function restore the default class in dropdown buttons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  restoreDefaultClassDropdownButtons() {\r\n    this.selectMenuPolygonButton.classList.value = this.selectMenuPolygonButtonClass;\r\n  }\r\n\r\n  /**\r\n   * This function show a confirmation dialog for removing the selected features from SandBox Layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeSelectedFeaturesFromSandBox(evt) {\r\n    if (this.entityLayer_.selectedFeatures_.length > 0) {\r\n      var acceptFn = this.removeSelectedFeatures.bind(this);\r\n      show(getValue('dialog_removeFeatures'),\r\n        getValue('dialog_removeFeatures_title'), 'info', acceptFn);\r\n    } else {\r\n      M.dialog.info(getValue('dialog_removeFeatures_noGeometry'), getValue('dialog_removeFeatures_title'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function removes the selected features from SandBox Layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeSelectedFeatures() {\r\n    this.deactiveControls();\r\n    this.unselectControls();\r\n    this.entityLayer_.removeFeaturesFromSandBox(this.entityLayer_.selectedFeatures_);\r\n    close();\r\n  }\r\n\r\n  /**\r\n   * This function activate the snapping interaction\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  activateSnapping(evt) {\r\n    if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n      evt.currentTarget.className += \" selected\";\r\n      evt.currentTarget.title = getValue('snapping_disable');\r\n      this.snappingControl.activate(null, null);\r\n    } else {\r\n      evt.currentTarget.title = getValue('snapping');\r\n      evt.currentTarget.className = this.snappingButton.className.replace(\" selected\", \"\");\r\n      this.snappingControl.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the insert geometry interaction\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  insertPolygon(evt) {\r\n    this.restoreDefaultClassDropdownButtons();\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.className += \" selected\";\r\n      var callback = this.onPolygonInserted.bind(this);\r\n      this.insertGeomControl.activate(callback);\r\n      this.snappingControl.deactivate();\r\n      if (this.snappingButton.className.indexOf(\"selected\") > 0) {\r\n        this.snappingControl.activate(null, null);\r\n      }\r\n    } else {\r\n      this.unselectControls();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the insert geometry interaction\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonInserted(evt) {\r\n    this.entityLayer_.addNewFeatureToSandBox(evt.feature);\r\n  }\r\n\r\n  /**\r\n   * This function activate the select geometry interaction by single click\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  selectPolygonByClick(evt) {\r\n    this.manageSelectedClassInDropdown(evt);\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.offsetParent.previousElementSibling.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.offsetParent.previousElementSibling.className += \" selected\";\r\n      var callback = this.onPolygonSelected.bind(this);\r\n      this.selectGeomControl.activate(callback);\r\n    } else {\r\n      this.showDropdownContent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the select geometry interaction by single click\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonSelected(evt) {\r\n    var this_ = this;\r\n    var featureInSandBox = null;\r\n    if (evt.selected.length > 0) {\r\n      var sandBoxFeatures = this.entityLayer_.getFeatures();\r\n      sandBoxFeatures.forEach(function (f, index, array) {\r\n        for (let i = 0; i < evt.selected.length; i++) {\r\n          if (evt.selected[i].getId() === this_.entityLayer_.getImplFeature(f).getId()) {\r\n            featureInSandBox = evt.selected[i];\r\n          }\r\n        }\r\n      });\r\n\r\n      if (featureInSandBox !== null) {\r\n        var selected = null;\r\n        this.entityLayer_.selectedFeatures_.forEach(function (f, index, array) {\r\n          for (let i = 0; i < evt.selected.length; i++) {\r\n            if (evt.selected[i].getId() === this_.entityLayer_.getImplFeature(f).getId()) {\r\n              selected = evt.selected[i];\r\n            }\r\n          }\r\n        });\r\n        if (selected === null) {\r\n          this.entityLayer_.selectFeature(featureInSandBox);\r\n        } else {\r\n          this.entityLayer_.unselectFeature(featureInSandBox);\r\n        }\r\n      }\r\n\r\n      evt.target.getFeatures().clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the select geometry interaction by drawing a polygon\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  selectPolygonByDraw(evt) {\r\n    this.manageSelectedClassInDropdown(evt);\r\n    var geometryType = evt.currentTarget.id === 'm-selectarea-button' ? 'Polygon' : 'LineString';\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.offsetParent.previousElementSibling.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.offsetParent.previousElementSibling.className += \" selected\";\r\n      var callback = this.onPolygonSelectedByDraw.bind(this);\r\n      this.insertTemporalGeomControl.activate(callback, geometryType);\r\n    } else {\r\n      this.showDropdownContent();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the select geometry interaction by drawing a polygon\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonSelectedByDraw(evt) {\r\n    var sandBoxFeatures = this.entityLayer_.getFeatures();\r\n    //var inter = intersects(sandBoxFeatures, evt.feature.getGeometry());\r\n    var inter = intersects(sandBoxFeatures, this.impl_.getGeoJsonFromFeature(evt.feature).geometry);\r\n    for (var i = 0; i < inter.length; i++) {\r\n      var featureInSandBox = null;\r\n      sandBoxFeatures.forEach(function (f, index, array) {\r\n        //if(inter[i].getId()===this_.entityLayer_.getImplFeature(f).getId()){\r\n        if (inter[i].getId() === f.getId()) {\r\n          featureInSandBox = inter[i];\r\n        }\r\n      });\r\n\r\n      if (featureInSandBox !== null) {\r\n        var selected = null;\r\n        this.entityLayer_.selectedFeatures_.forEach(function (f, index, array) {\r\n          //if(inter[i].getId()===this_.entityLayer_.getImplFeature(f).getId()){\r\n          if (inter[i].getId() === f.getId()) {\r\n            selected = inter[i];\r\n          }\r\n        });\r\n        if (selected === null) {\r\n          this.entityLayer_.selectFeature(featureInSandBox);\r\n        } else {\r\n          this.entityLayer_.unselectFeature(featureInSandBox);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function selects all features in sandboxlayer\r\n   *\t\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  selectAllSandboxPolygon() {\r\n    if (this.entityLayer_.getFeatures().length > 0) {\r\n      this.deactiveControls();\r\n      this.unselectControls();\r\n      this.entityLayer_.selectAllFeatures();\r\n    } else {\r\n      M.dialog.info(getValue('dialog_noGeometry'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function deselects all features in sandboxlayer\r\n   *\t\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deselectAllSandboxPolygon() {\r\n    if (this.entityLayer_.selectedFeatures_.length > 0) {\r\n      this.deactiveControls();\r\n      this.unselectControls();\r\n      this.entityLayer_.unselectAllFeatures();\r\n    } else {\r\n      M.dialog.info(getValue('dialog_noGeometry_selected'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the modify geometry interaction\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  modifyPolygon(evt) {\r\n    if (this.entityLayer_.selectedFeatures_.length > 0) {\r\n      this.restoreDefaultClassDropdownButtons();\r\n      this.deactiveControls();\r\n      if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n        this.unselectControls();\r\n        evt.currentTarget.className += \" selected\";\r\n        var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n        for (let i = 0; i < featuresSelected.length; i++) {\r\n          var styles = this.impl_.getModifyStyle(this.entityLayer_.getImplFeature(featuresSelected[i]));\r\n          this.entityLayer_.getImplFeature(featuresSelected[i]).setStyle(styles);\r\n        }\r\n        var callback = this.onPolygonModified.bind(this);\r\n        this.modifyGeomControl.activate(callback);\r\n        this.snappingControl.deactivate();\r\n        if (this.snappingButton.className.indexOf(\"selected\") > 0) {\r\n          this.snappingControl.activate(null, null);\r\n        }\r\n      } else {\r\n        this.unselectControls();\r\n      }\r\n    } else {\r\n      M.dialog.info(getValue('dialog_noGeometry_selected'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the modify geometry interaction\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonModified(evt) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    let olFeature = null;\r\n    const features = evt.features.getArray();\r\n    for (var i = 0; i < features.length; i++) {\r\n      var rev = features[i].getRevision();\r\n      if (rev > 1) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        let olFeature = features[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the insert line interaction in order to divide selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  dividePolygon(evt) {\r\n    this.restoreDefaultClassDropdownButtons();\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.className += \" selected\";\r\n      var callback = this.onPolygonDivided.bind(this);\r\n      this.insertTemporalGeomControl.activate(callback, 'LineString');\r\n      document.body.style.cursor = 'pointer';\r\n    } else {\r\n      this.unselectControls();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the insert line interaction in order to divide selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonDivided(evt) {\r\n    var inter;\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    var resultPolygons = [];\r\n    if (featuresSelected.length > 0) {\r\n      var feature = new M.Feature(Math.floor(Math.random() * 1000000), this.impl_.getGeoJsonFromFeature(evt.feature));\r\n      inter = intersects(featuresSelected, feature.getGeometry());\r\n      for (var i = 0; i < inter.length; i++) {\r\n        resultPolygons.push(dividePolygon(feature, inter[i]));\r\n      }\r\n      var topologicalError = false;\r\n      for (var j = 0; j < resultPolygons.length; j++) {\r\n        if (resultPolygons[j] === 0 || resultPolygons[j] === -1 || resultPolygons[j] === -2 || resultPolygons[j] === undefined || resultPolygons[j] === null) {\r\n          topologicalError = true;\r\n        }\r\n      }\r\n      if (!topologicalError) {\r\n        for (var k = 0; k < resultPolygons.length; k++) {\r\n          this.entityLayer_.addFeatures(resultPolygons[k]);\r\n        }\r\n        this.entityLayer_.removeFeaturesFromSandBox(inter);\r\n      } else {\r\n        M.dialog.info(getValue('dialog_noValidGeometry'), getValue('geometry_divide'));\r\n      }\r\n    } else {\r\n      M.dialog.info(getValue('dialog_atLeast_oneSelected'), getValue('geometry_divide'));\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function show a confirmation dialog for joining selected features\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  confirmDialogJoinPolygons(evt) {\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    if (featuresSelected.length > 1) {\r\n      var acceptFn = this.joinPolygons.bind(this);\r\n      show(getValue('dialog_union'),\r\n        getValue('dialog_union_title'), 'info', acceptFn);\r\n    } else {\r\n      M.dialog.info(getValue('dialog_atLeast_twoSelected'), getValue('dialog_union_title'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function joins adjacent selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  // revisada\r\n  joinPolygons() {\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_,\r\n      pairTargetPolygons = [],\r\n      targetPolygon,\r\n      polygonsToDelete = [],\r\n      union, areAdjacentPolygons, newFeature,\r\n      polygonsToVerify = [];\r\n    this.restoreDefaultClassDropdownButtons();\r\n    close();\r\n    for (let i = 0; i < featuresSelected.length; i++) {\r\n      var clone = new M.Feature(featuresSelected[i].getId(), {\r\n        \"type\": \"Feature\",\r\n        \"geometry\": featuresSelected[i].getGeometry(),\r\n        \"geometry_name\": \"geometry\",\r\n        \"properties\": {}\r\n      });\r\n      polygonsToVerify.push(clone);\r\n    }\r\n    if (featuresSelected.length > 0) {\r\n      this.deactiveControls();\r\n      this.unselectControls();\r\n      for (let j = 0; j < featuresSelected.length; j++) {\r\n        targetPolygon = featuresSelected[j];\r\n        for (let k = 0; k < polygonsToVerify.length; k++) {\r\n          pairTargetPolygons.push(targetPolygon);\r\n          var jstsGeomFeature1 = getJSTSGeometry(targetPolygon.getGeometry());\r\n          var jstsGeomFeature2 = getJSTSGeometry(polygonsToVerify[k].getGeometry());\r\n          areAdjacentPolygons = jstsGeomFeature1.intersects(jstsGeomFeature2);\r\n          if (areAdjacentPolygons === true && targetPolygon.equals(polygonsToVerify[k]) === false) {\r\n            polygonsToDelete.push(this.entityLayer_.getImplFeature(targetPolygon));\r\n            pairTargetPolygons.push(polygonsToVerify[k]);\r\n            union = unionFeature(pairTargetPolygons[0], pairTargetPolygons[1]);\r\n            union.setId(Math.floor(Math.random() * 1000000));\r\n            pairTargetPolygons = [];\r\n            this.entityLayer_.addNewMFeatureToSandBox(union);\r\n            polygonsToDelete.push(polygonsToVerify[k]);\r\n            this.entityLayer_.removeFeaturesFromSandBox(polygonsToDelete);\r\n            for (let l = 0; l < polygonsToDelete.length; l++) {\r\n              var index = polygonsToVerify.indexOf(polygonsToDelete[l]);\r\n              if (index > -1) {\r\n                polygonsToVerify.splice(index, 1);\r\n              }\r\n            }\r\n            var jsonFeature = union.getGeoJSON();\r\n            newFeature = new M.Feature(union.getId(), jsonFeature);\r\n            targetPolygon = newFeature;\r\n            k = 0;\r\n            j = 0;\r\n          } else {\r\n            pairTargetPolygons = [];\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      M.dialog.info(getValue('dialog_atLeast_twoSelected'));\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the select geometry interaction in order to intersect selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  intersectPolygon(evt) {\r\n    this.restoreDefaultClassDropdownButtons();\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    if (featuresSelected.length === 0) {\r\n      M.dialog.info(getValue('dialog_removeFeatures_noGeometry'), getValue('dialog_intersect_title'));\r\n      return;\r\n    }\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.className += \" selected\";\r\n      document.body.style.cursor = 'pointer';\r\n      var callback = this.onPolygonIntersected.bind(this);\r\n      this.selectGeomControl.activate(callback);\r\n      this.highlightControl.activate();\r\n    } else {\r\n      this.highlightControl.deactivate();\r\n      this.unselectControls();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the select geometry interaction in order to intersect selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onPolygonIntersected(evt) {\r\n    var inter, featuresSelected;\r\n    featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    if (featuresSelected.length > 0) {\r\n      inter = intersects(featuresSelected, this.entityLayer_.getMFeatureById(evt.selected[0].getId()).getGeometry());\r\n      if (inter.length > 0) {\r\n        var args = [];\r\n        args.push(inter);\r\n        args.push(this.entityLayer_.getMFeatureById(evt.selected[0].getId()));\r\n        this.doSpatialProcess(intersection, args);\r\n        this.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function activate the select geometry interaction in order to empty selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  emptyPolygon(evt) {\r\n    this.restoreDefaultClassDropdownButtons();\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    if (featuresSelected.length === 0) {\r\n      M.dialog.info(getValue('dialog_removeFeatures_noGeometry'), getValue('dialog_empty_title'));\r\n      return;\r\n    }\r\n    this.deactiveControls();\r\n    if (evt.currentTarget.className.indexOf(\"selected\") < 0) {\r\n      this.unselectControls();\r\n      evt.currentTarget.className += \" selected\";\r\n      document.body.style.cursor = 'pointer';\r\n      var callback = this.onGeometryEmptied.bind(this);\r\n      this.selectGeomControl.activate(callback);\r\n      this.highlightControl.activate();\r\n    } else {\r\n      this.highlightControl.deactivate();\r\n      this.unselectControls();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for the select geometry interaction in order to empty selected polygons\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  onGeometryEmptied(evt) {\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    if (featuresSelected.length > 0) {\r\n      var args = [];\r\n      args.push(featuresSelected);\r\n      args.push(this.entityLayer_.getMFeatureById(evt.selected[0].getId()));\r\n      this.doSpatialProcess(difference, args);\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function launch the spatialProcess\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {Object} fnProcess - process function in editionSpatialEngine\r\n   * @param {Array} args - arguments for fnProcess function\r\n   * @api stable\r\n   */\r\n  doSpatialProcess(fnProcess, args) {\r\n    var featuresSelected = args[0];\r\n    var plantillaRecorte = args[1];\r\n\r\n    for (let i = 0; i < featuresSelected.length; i++) {\r\n      var olFeature = featuresSelected[i];\r\n\r\n      if (plantillaRecorte !== olFeature) {\r\n        var difference = fnProcess.apply(this, [olFeature, plantillaRecorte]);\r\n        var feature = new M.Feature(Math.floor(Math.random() * 1000000) + 1, {\r\n          \"type\": \"Feature\",\r\n          \"geometry\": difference,\r\n          \"geometry_name\": \"geometry\",\r\n          \"properties\": {}\r\n        });\r\n        if (feature.getGeometry().type === \"MultiPolygon\") {\r\n          var featureTmp = this.impl_.createOLPolygonFeature(feature);\r\n          this.entityLayer_.addNewMFeatureToSandBox(featureTmp);\r\n        } else {\r\n          this.entityLayer_.addNewMFeatureToSandBox(feature);\r\n        }\r\n      }\r\n\r\n      if (featuresSelected.length > 1 || (featuresSelected.length === 1 && plantillaRecorte !== olFeature)) {\r\n        this.entityLayer_.removeFeaturesFromSandBox([olFeature]);\r\n      }\r\n    }\r\n  }\r\n\r\n  addGeom(evt) {\r\n    let capasVectoriales = [];\r\n    this.facadeMap_.getLayers().forEach(function (layer) {\r\n      if (layer instanceof M.layer.Vector && layer.name != 'editionLayer') {\r\n        if (layer.getFeatures().length > 0) {\r\n          capasVectoriales.push(layer);\r\n        }\r\n      }\r\n    });\r\n\r\n    var acceptFn = this.addGeomFromVectorialLayer.bind(this);\r\n    show(getValue('dialog_add_geometry'),\r\n      getValue('dialog_add_geometry_title'), 'info', acceptFn, undefined, capasVectoriales);\r\n  }\r\n\r\n  addGeomFromVectorialLayer(layerName) {\r\n    // TODO: Resolver asincronia de spinner\r\n    //showSpinner(mapContainer);\r\n    let layerVectorial = this.facadeMap_.getLayers({ 'name': layerName })[0];\r\n    // TODO: Se debe vaciar la capa sanbox antes de copiar los nuevos elementos?\r\n    this.entityLayer_.removeAllFeatures();\r\n    // Se cambia el tipo de geometria si es necesario\r\n    // Sabemos que la capa no esta vacia\r\n    let tipoGeometria = layerVectorial.getFeatures()[0].getGeometry().type;\r\n    this.entityLayer_.setType(tipoGeometria);\r\n\r\n    // Se clonan y añaden los features\r\n    layerVectorial.getFeatures().forEach(element => {\r\n      // En principio se clonan los features, con atributos\r\n      // TODO: M.utils.extends, recursion\r\n      let json = element.getGeoJSON();\r\n      let clon = new M.Feature(element.getId(), json);\r\n\r\n      this.entityLayer_.addNewMFeatureToSandBox(clon);\r\n    });\r\n    //closeSpinner(mapContainer);\r\n    close();\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * This function checks if WFSManager Plugin is loaded\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  checkWFSManagerPlugin() {\r\n    var wfsCatalog = this.facadeMap_.getPanels('Catalog')[0].getControls()[0];\r\n    if (wfsCatalog) {\r\n      for (let i = 0; i < wfsCatalog.controls_.length; i++) {\r\n        if (wfsCatalog.controls_[i].name === \"WFSManagerControl\") {\r\n          this.WFSManagerCtl = wfsCatalog.controls_[i];\r\n        }\r\n      }\r\n      return this.WFSManagerCtl !== null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function does a zoom to sandbox layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  zoomToSandBox(evt) {\r\n    this.manageSelectedClassInDropdown(evt);\r\n    if (this.entityLayer_.getFeatures().length > 0) {\r\n      this.entityLayer_.zoomToFeatures(this.entityLayer_.getFeatures());\r\n    } else {\r\n      M.dialog.info(getValue('dialog_noGeometry'), getValue('dialog_zoom_title'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function does a zoom to features selected in sandbox layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  zoomToSelection(evt) {\r\n    this.manageSelectedClassInDropdown(evt);\r\n    if (this.entityLayer_.selectedFeatures_.length > 0) {\r\n      this.entityLayer_.zoomToFeatures(this.entityLayer_.selectedFeatures_);\r\n    } else {\r\n      M.dialog.info(getValue('dialog_removeFeatures_noGeometry'), getValue('dialog_zoom_select'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function does a filtered WFS GetFeature from active service in WFSManager Plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {evt} event\r\n   * @api stable\r\n   */\r\n  getWfsFeatures(evt) {\r\n    var this_ = this;\r\n    evt.preventDefault();\r\n    var mapContainer = document.getElementsByClassName(\"m-mapea-container\")[0];\r\n    M.EditionSpinner.show(mapContainer);\r\n    var requestParams = this.WFSManagerCtl.getServiceActive();\r\n    var featureRequest = this.impl_.getFeatureRequestBody(requestParams, evt.coordinate);\r\n    var options = { jsonp: requestParams.useProxy };\r\n    var body = new XMLSerializer().serializeToString(featureRequest);\r\n    M.proxy(requestParams.useProxy);\r\n\r\n    M.remote.post(requestParams.url, body, options)\r\n      .then(function (response) {\r\n        M.proxy(true);\r\n        if (response.code === 200) {\r\n          var numberFeatures = Number(response.xml.documentElement.getAttribute(\"numberOfFeatures\"));\r\n          if (numberFeatures < 1) {\r\n            M.EditionSpinner.close(mapContainer);\r\n            M.dialog.info(getValue('dialog_not_found') + requestParams.description);\r\n          } else {\r\n            return response.text;\r\n          }\r\n        } else {\r\n          M.dialog.error(getValue('dialog_cannot_consult'));\r\n          return;\r\n        }\r\n      }).then(function (text) {\r\n        var features = this_.entityLayer_.readGML3Features(text);\r\n        if (features.length > 0) {\r\n          for (let i = 0; i < features.length; i++) {\r\n            this_.entityLayer_.addNewFeatureToSandBox(features[i]);\r\n          }\r\n          M.EditionSpinner.close(mapContainer);\r\n        } else {\r\n          M.EditionSpinner.close(mapContainer);\r\n          M.dialog.info(getValue('dialog_not_found') + requestParams.description);\r\n        }\r\n      }).catch(function (e) {\r\n        M.EditionSpinner.close(mapContainer);\r\n        M.dialog.error(getValue('dialog_cannot_consult'));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function deactivates all controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactiveControls() {\r\n    this.insertGeomControl.deactivate();\r\n    this.insertTemporalGeomControl.deactivate();\r\n    this.modifyGeomControl.deactivate();\r\n    //this.translateGeomControl.deactivate();\r\n    this.selectGeomControl.deactivate();\r\n    this.snappingControl.deactivate();\r\n    this.highlightControl.deactivate();\r\n    var mapImpl = this.facadeMap_.getMapImpl();\r\n    mapImpl.un('click', this.getWfsFeatures, this);\r\n  }\r\n\r\n  /**\r\n   * This function unselects all controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  unselectControls() {\r\n    this.insertPolygonButton.className = this.insertPolygonButton.className.replace(\" selected\", \"\");\r\n    this.addGeomButton.className = this.addGeomButton.className.replace(\" selected\", \"\");\r\n    this.selectPolygonButton.className = this.selectPolygonButton.className.replace(\" selected\", \"\");\r\n    this.selectPolygonByLineButton.className = this.selectPolygonByLineButton.className.replace(\" selected\", \"\");\r\n    this.selectPolygonByAreaButton.className = this.selectPolygonByAreaButton.className.replace(\" selected\", \"\");\r\n    this.modifyPolygonButton.className = this.modifyPolygonButton.className.replace(\" selected\", \"\");\r\n    this.dividePolygonButton.className = this.dividePolygonButton.className.replace(\" selected\", \"\");\r\n    this.intersectPolygonButton.className = this.intersectPolygonButton.className.replace(\" selected\", \"\");\r\n    this.emptyPolygonButton.className = this.emptyPolygonButton.className.replace(\" selected\", \"\");\r\n    this.removeFromSandBoxButton.className = this.removeFromSandBoxButton.className.replace(\" selected\", \"\");\r\n\r\n    var featuresSelected = this.entityLayer_.selectedFeatures_;\r\n    for (let i = 0; i < featuresSelected.length; i++) {\r\n      featuresSelected[i].getImpl().getOLFeature().setStyle(this.entityLayer_.getSelectedStyle());\r\n    }\r\n\r\n    document.body.style.cursor = 'default';\r\n  }\r\n\r\n  /**\r\n   * This function execute both deactivate all controls and unselect all controls functions\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  clear() {\r\n    this.unselectControls();\r\n    this.deactiveControls();\r\n  }\r\n\r\n  /**\r\n   * This function checks if an object is equals\r\n   * to this control\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {*} obj - Object to compare\r\n   * @returns {boolean} equals - Returns if they are equal or not\r\n   * @api stable\r\n   */\r\n  equals(obj) {\r\n    var equals = false;\r\n    if (obj instanceof M.control.EditionGeometryControl) {\r\n      equals = (this.name === obj.name);\r\n    }\r\n    return equals;\r\n  }\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.getImpl().destroy();\r\n  }\r\n\r\n}\r\n","import editionLayer from '../../impl/ol/js/editionLayer';\r\nimport EditionSelectGeometry from './editionSelectGeometry';\r\nimport EditionImplControl from 'impl/editioncontrol';\r\nimport EditionHighlightGeometry from './editionHighlightGeometry';\r\nimport EditionInsertGeometry from './editionInsertGeometry';\r\nimport EditionModifyGeometry from './editionModifyGeometry';\r\nimport EditionTemporalGeometry from './editionInsertTemporalGeometry';\r\nimport EditionSnapping from './editionSnapping';\r\nimport EditionGeometryControl from './editionGeometryControl';\r\nimport template from 'templates/edition';\r\nimport { getValue } from './i18n/language';\r\n\r\n// @namespace(\"M.control\")\r\nexport default class editionControl extends M.Control {\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor() {\r\n    // 1. checks if the implementation can create PluginControl\r\n    if (M.utils.isUndefined(EditionImplControl)) {\r\n      M.exception('La implementación usada no puede crear controles editionControl');\r\n    }\r\n    // 2. implementation of this control\r\n    let impl = new EditionImplControl();\r\n    super(impl, \"edition\");\r\n\r\n    /**\t\r\n     * Edition layer\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.sandBoxLayer_ = null;\r\n  }\r\n\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    var this_ = this;\r\n    this.facadeMap_ = map;\r\n    return new Promise((success, fail) => {\r\n      const html = M.template.compileSync(template, {\r\n        vars: {\r\n          translations: {\r\n            import_btn: getValue('import_btn'),\r\n            select_btn: getValue('select_btn'),\r\n            select_click: getValue('select_click'),\r\n            select_line: getValue('select_line'),\r\n            select_area: getValue('select_area'),\r\n            select_all: getValue('select_all'),\r\n            deselect_all: getValue('deselect_all'),\r\n            zoom: getValue('zoom'),\r\n            zoom_sandbox: getValue('zoom_sandbox'),\r\n            zoom_selection: getValue('zoom_selection'),\r\n            geometry_draw: getValue('geometry_draw'),\r\n            snapping: getValue('snapping'),\r\n            modify_polygon: getValue('modify_polygon'),\r\n            geometry_divide: getValue('geometry_divide'),\r\n            union: getValue('union'),\r\n            empty_polygon: getValue('empty_polygon'),\r\n            intersection: getValue('intersection'),\r\n            delete_selected: getValue('delete_selected'),\r\n          },\r\n        },\r\n      });\r\n      this_.element_ = html;\r\n      this_.sandBoxLayer_ = new editionLayer(this);\r\n      this_.createControls();\r\n      success(html);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function creates the edition controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  createControls() {\r\n    this.highlightControl = new EditionHighlightGeometry(this.facadeMap_, this.sandBoxLayer_);\r\n    this.insertGeomControl = new EditionInsertGeometry(this.facadeMap_, this.sandBoxLayer_);\r\n    this.modifyGeomControl = new EditionModifyGeometry(this.facadeMap_, this.sandBoxLayer_);\r\n    this.insertTemporalGeomControl = new EditionTemporalGeometry(this.facadeMap_, this.sandBoxLayer_);\r\n    this.snappingControl = new EditionSnapping(this.facadeMap_, this.sandBoxLayer_);\r\n    this.selectGeomControl = new EditionSelectGeometry(this.facadeMap_, this.sandBoxLayer_);\r\n    this.geomControl = new EditionGeometryControl(this);\r\n  }\r\n\r\n  /**\r\n   * This function is called on the control activation\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {\r\n    super.activate();\r\n  }\r\n\r\n  /**\r\n   * This function is called on the control deactivation\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    super.deactivate();\r\n    this.getImpl().deactivateClick(this.map_);\r\n  }\r\n\r\n  /**\r\n   * This function gets activation button\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {HTML} html of control\r\n   * @api stable\r\n   */\r\n  getActivationButton(html) {\r\n    return html.querySelector('.m-edition button');\r\n  }\r\n\r\n  /**\r\n   * This function destroy the controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroyControls() {\r\n    this.geomControl.clear();\r\n    this.sandBoxLayer_.destroy();\r\n  }\r\n\r\n  /**\r\n   * This function compares controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Control} control to compare\r\n   * @api stable\r\n   */\r\n  equals(control) {\r\n    return control instanceof editionControl;\r\n  }\r\n}\r\n","/**\r\n * @module M/plugin/Edition\r\n */\r\n\r\nimport 'assets/css/edition.css';\r\nimport 'templates/edition.html';\r\nimport EditionControl from './editioncontrol';\r\nimport api from '../../api.json';\r\nimport { getValue } from './i18n/language';\r\n\r\nexport default class Edition extends M.Plugin {\r\n\r\n  /**\r\n   * Name to identify this plugin\r\n   * @const\r\n   * @type {string}\r\n   * @public\r\n   * @api stable\r\n   */\r\n  static get NAME() {\r\n    return 'edition';\r\n  }\r\n\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    // this.userParameters_ = userParameters;\r\n    // this.config_ = userParameters ? userParameters.config : {};\r\n    //this.control_ = null;\r\n\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n    /**\r\n     * Position of the Plugin\r\n     * @public\r\n     * Posible values: TR | TL | BL | BR\r\n     * @type {String}\r\n     */\r\n    this.position = 'TL';\r\n\r\n    /**\r\n     * Metadata from api.json\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.metadata_ = api.metadata;\r\n\r\n\r\n    /**\r\n     * add your variables\r\n     *\r\n     */\r\n\r\n  }\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    this.control_ = new EditionControl();\r\n    this.controls_.push(this.control_);\r\n    this.map_ = map;\r\n    //panel para agregar control - no obligatorio\r\n    this.panel_ = new M.ui.Panel(\"paneledition\", {\r\n      'collapsible': true,\r\n      'className': 'm-edition',\r\n      'collapsedButtonClass': 'g-editiontools-closed',\r\n      'openedButtonClass': 'g-editiontools-opened-vertical',\r\n      'position': M.ui.position[this.position],\r\n      'tooltip': getValue('tooltip')\r\n    });\r\n\r\n    this.panel_.addControls(this.controls_);\r\n    map.addPanels(this.panel_);\r\n  }\r\n\r\n  /**\r\n   * @getter\r\n   * @public\r\n   */\r\n  get name() {\r\n    return 'edition';\r\n  }\r\n\r\n  /**\r\n   * This function gets metadata plugin\r\n   *\r\n   * @public\r\n   * @getter\r\n   * @api stable\r\n   * @return {Object}\r\n   */\r\n  getMetadata() {\r\n    return this.metadata_;\r\n  }\r\n\r\n  /**\r\n   * Get the API REST Parameters of the plugin\r\n   *\r\n   * @function\r\n   * @public\r\n   * @api\r\n   */\r\n  getAPIRest() {\r\n    return `${this.name}=${this.position}`;\r\n  }\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.control_.destroyControls();\r\n    this.map_.removeControls([this.control_]);\r\n    this.map_ = null;\r\n    this.control_ = null;\r\n    this.panel_ = null;\r\n  }\r\n\r\n  /**\r\n   * This function compare if pluging recieved by param is instance of M.plugin.Transparency\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.plugin} plugin to compare\r\n   * @api stable\r\n   */\r\n  equals(plugin) {\r\n    if (plugin instanceof Edition) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import M$plugin$Edition from '/mnt/c/Users/Irene/Desktop/FCT/Practicas/M5/mapea-publico/src/plugins/v5/edition/src/facade/js/edition';\n\nif (!window.M.plugin) window.M.plugin = {};\nwindow.M.plugin.Edition = M$plugin$Edition;\n"],"sourceRoot":""}